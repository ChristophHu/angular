{"version":3,"sources":["./node_modules/@ngrx/entity/__ivy_ngcc__/fesm2015/ngrx-entity.js","./src/app/core/navbar/topnav/topnav.component.ts","./src/app/core/navbar/topnav/topnav.component.html","./src/app/core/navbar/topnav/topnav.module.ts","./src/app/modules/layouts/mobile/mobile.component.ts","./src/app/modules/layouts/mobile/mobile.component.html","./src/app/modules/layouts/mobile/mobile.module.ts","./src/app/shared/utils.ts","./src/app/store/kat-store/kat.facade.ts","./src/app/store/kat-store/store/selectors.ts","./src/app/store/resolver.ts","./src/app/store/ship-store/index.ts","./src/app/store/ship-store/ship.actions.ts","./src/app/store/ship-store/ship.resolver.ts","./src/app/store/ship-store/ship.selectors.ts","./src/app/store/ship-store/ship.state.ts","./src/app/store/spec-store/spec.facade.ts","./src/app/store/spec-store/store/actions.ts","./src/app/store/spec-store/store/reducers.ts","./src/app/store/spec-store/store/selectors.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAA6C;AACH;;AAE1C;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,2DAAc;AACxC,4BAA4B,2DAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2DAAc;AACrC,4BAA4B,2DAAc;AAC1C,uBAAuB,2DAAc;AACrC,yBAAyB,2DAAc;AACvC;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AAC/B;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,iDAAiD,WAAW,uCAAuC;AACnG;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,wDAAS;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,wBAAwB;AACxB,SAAS;AACT;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA,SAAS;AACT,yCAAyC,KAAK;AAC9C;AACA;AACA,4BAA4B,UAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA,SAAS;AACT;AACA;AACA,4BAA4B,UAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"src_app_modules_layouts_mobile_mobile_module_ts.js","sourcesContent":["import { createSelector } from '@ngrx/store';\nimport { isDevMode } from '@angular/core';\n\nfunction getInitialEntityState() {\n    return {\n        ids: [],\n        entities: {},\n    };\n}\nfunction createInitialStateFactory() {\n    function getInitialState(additionalState = {}) {\n        return Object.assign(getInitialEntityState(), additionalState);\n    }\n    return { getInitialState };\n}\n\nfunction createSelectorsFactory() {\n    function getSelectors(selectState) {\n        const selectIds = (state) => state.ids;\n        const selectEntities = (state) => state.entities;\n        const selectAll = createSelector(selectIds, selectEntities, (ids, entities) => ids.map((id) => entities[id]));\n        const selectTotal = createSelector(selectIds, (ids) => ids.length);\n        if (!selectState) {\n            return {\n                selectIds,\n                selectEntities,\n                selectAll,\n                selectTotal,\n            };\n        }\n        return {\n            selectIds: createSelector(selectState, selectIds),\n            selectEntities: createSelector(selectState, selectEntities),\n            selectAll: createSelector(selectState, selectAll),\n            selectTotal: createSelector(selectState, selectTotal),\n        };\n    }\n    return { getSelectors };\n}\n\nvar DidMutate;\n(function (DidMutate) {\n    DidMutate[DidMutate[\"EntitiesOnly\"] = 0] = \"EntitiesOnly\";\n    DidMutate[DidMutate[\"Both\"] = 1] = \"Both\";\n    DidMutate[DidMutate[\"None\"] = 2] = \"None\";\n})(DidMutate || (DidMutate = {}));\nfunction createStateOperator(mutator) {\n    return function operation(arg, state) {\n        const clonedEntityState = {\n            ids: [...state.ids],\n            entities: Object.assign({}, state.entities),\n        };\n        const didMutate = mutator(arg, clonedEntityState);\n        if (didMutate === DidMutate.Both) {\n            return Object.assign({}, state, clonedEntityState);\n        }\n        if (didMutate === DidMutate.EntitiesOnly) {\n            return Object.assign(Object.assign({}, state), { entities: clonedEntityState.entities });\n        }\n        return state;\n    };\n}\n\nfunction selectIdValue(entity, selectId) {\n    const key = selectId(entity);\n    if (isDevMode() && key === undefined) {\n        console.warn('@ngrx/entity: The entity passed to the `selectId` implementation returned undefined.', 'You should probably provide your own `selectId` implementation.', 'The entity that was passed:', entity, 'The `selectId` implementation:', selectId.toString());\n    }\n    return key;\n}\n\nfunction createUnsortedStateAdapter(selectId) {\n    function addOneMutably(entity, state) {\n        const key = selectIdValue(entity, selectId);\n        if (key in state.entities) {\n            return DidMutate.None;\n        }\n        state.ids.push(key);\n        state.entities[key] = entity;\n        return DidMutate.Both;\n    }\n    function addManyMutably(entities, state) {\n        let didMutate = false;\n        for (const entity of entities) {\n            didMutate = addOneMutably(entity, state) !== DidMutate.None || didMutate;\n        }\n        return didMutate ? DidMutate.Both : DidMutate.None;\n    }\n    function setAllMutably(entities, state) {\n        state.ids = [];\n        state.entities = {};\n        addManyMutably(entities, state);\n        return DidMutate.Both;\n    }\n    function setOneMutably(entity, state) {\n        const key = selectIdValue(entity, selectId);\n        if (key in state.entities) {\n            state.entities[key] = entity;\n            return DidMutate.EntitiesOnly;\n        }\n        state.ids.push(key);\n        state.entities[key] = entity;\n        return DidMutate.Both;\n    }\n    function setManyMutably(entities, state) {\n        const didMutateSetOne = entities.map((entity) => setOneMutably(entity, state));\n        switch (true) {\n            case didMutateSetOne.some((didMutate) => didMutate === DidMutate.Both):\n                return DidMutate.Both;\n            case didMutateSetOne.some((didMutate) => didMutate === DidMutate.EntitiesOnly):\n                return DidMutate.EntitiesOnly;\n            default:\n                return DidMutate.None;\n        }\n    }\n    function removeOneMutably(key, state) {\n        return removeManyMutably([key], state);\n    }\n    function removeManyMutably(keysOrPredicate, state) {\n        const keys = keysOrPredicate instanceof Array\n            ? keysOrPredicate\n            : state.ids.filter((key) => keysOrPredicate(state.entities[key]));\n        const didMutate = keys\n            .filter((key) => key in state.entities)\n            .map((key) => delete state.entities[key]).length > 0;\n        if (didMutate) {\n            state.ids = state.ids.filter((id) => id in state.entities);\n        }\n        return didMutate ? DidMutate.Both : DidMutate.None;\n    }\n    function removeAll(state) {\n        return Object.assign({}, state, {\n            ids: [],\n            entities: {},\n        });\n    }\n    function takeNewKey(keys, update, state) {\n        const original = state.entities[update.id];\n        const updated = Object.assign({}, original, update.changes);\n        const newKey = selectIdValue(updated, selectId);\n        const hasNewKey = newKey !== update.id;\n        if (hasNewKey) {\n            keys[update.id] = newKey;\n            delete state.entities[update.id];\n        }\n        state.entities[newKey] = updated;\n        return hasNewKey;\n    }\n    function updateOneMutably(update, state) {\n        return updateManyMutably([update], state);\n    }\n    function updateManyMutably(updates, state) {\n        const newKeys = {};\n        updates = updates.filter((update) => update.id in state.entities);\n        const didMutateEntities = updates.length > 0;\n        if (didMutateEntities) {\n            const didMutateIds = updates.filter((update) => takeNewKey(newKeys, update, state)).length >\n                0;\n            if (didMutateIds) {\n                state.ids = state.ids.map((id) => newKeys[id] || id);\n                return DidMutate.Both;\n            }\n            else {\n                return DidMutate.EntitiesOnly;\n            }\n        }\n        return DidMutate.None;\n    }\n    function mapMutably(map, state) {\n        const changes = state.ids.reduce((changes, id) => {\n            const change = map(state.entities[id]);\n            if (change !== state.entities[id]) {\n                changes.push({ id, changes: change });\n            }\n            return changes;\n        }, []);\n        const updates = changes.filter(({ id }) => id in state.entities);\n        return updateManyMutably(updates, state);\n    }\n    function mapOneMutably({ map, id }, state) {\n        const entity = state.entities[id];\n        if (!entity) {\n            return DidMutate.None;\n        }\n        const updatedEntity = map(entity);\n        return updateOneMutably({\n            id: id,\n            changes: updatedEntity,\n        }, state);\n    }\n    function upsertOneMutably(entity, state) {\n        return upsertManyMutably([entity], state);\n    }\n    function upsertManyMutably(entities, state) {\n        const added = [];\n        const updated = [];\n        for (const entity of entities) {\n            const id = selectIdValue(entity, selectId);\n            if (id in state.entities) {\n                updated.push({ id, changes: entity });\n            }\n            else {\n                added.push(entity);\n            }\n        }\n        const didMutateByUpdated = updateManyMutably(updated, state);\n        const didMutateByAdded = addManyMutably(added, state);\n        switch (true) {\n            case didMutateByAdded === DidMutate.None &&\n                didMutateByUpdated === DidMutate.None:\n                return DidMutate.None;\n            case didMutateByAdded === DidMutate.Both ||\n                didMutateByUpdated === DidMutate.Both:\n                return DidMutate.Both;\n            default:\n                return DidMutate.EntitiesOnly;\n        }\n    }\n    return {\n        removeAll,\n        addOne: createStateOperator(addOneMutably),\n        addMany: createStateOperator(addManyMutably),\n        setAll: createStateOperator(setAllMutably),\n        setOne: createStateOperator(setOneMutably),\n        setMany: createStateOperator(setManyMutably),\n        updateOne: createStateOperator(updateOneMutably),\n        updateMany: createStateOperator(updateManyMutably),\n        upsertOne: createStateOperator(upsertOneMutably),\n        upsertMany: createStateOperator(upsertManyMutably),\n        removeOne: createStateOperator(removeOneMutably),\n        removeMany: createStateOperator(removeManyMutably),\n        map: createStateOperator(mapMutably),\n        mapOne: createStateOperator(mapOneMutably),\n    };\n}\n\nfunction createSortedStateAdapter(selectId, sort) {\n    const { removeOne, removeMany, removeAll } = createUnsortedStateAdapter(selectId);\n    function addOneMutably(entity, state) {\n        return addManyMutably([entity], state);\n    }\n    function addManyMutably(newModels, state) {\n        const models = newModels.filter((model) => !(selectIdValue(model, selectId) in state.entities));\n        if (models.length === 0) {\n            return DidMutate.None;\n        }\n        else {\n            merge(models, state);\n            return DidMutate.Both;\n        }\n    }\n    function setAllMutably(models, state) {\n        state.entities = {};\n        state.ids = [];\n        addManyMutably(models, state);\n        return DidMutate.Both;\n    }\n    function setOneMutably(entity, state) {\n        const id = selectIdValue(entity, selectId);\n        if (id in state.entities) {\n            state.ids = state.ids.filter((val) => val !== id);\n            merge([entity], state);\n            return DidMutate.Both;\n        }\n        else {\n            return addOneMutably(entity, state);\n        }\n    }\n    function setManyMutably(entities, state) {\n        const didMutateSetOne = entities.map((entity) => setOneMutably(entity, state));\n        switch (true) {\n            case didMutateSetOne.some((didMutate) => didMutate === DidMutate.Both):\n                return DidMutate.Both;\n            case didMutateSetOne.some((didMutate) => didMutate === DidMutate.EntitiesOnly):\n                return DidMutate.EntitiesOnly;\n            default:\n                return DidMutate.None;\n        }\n    }\n    function updateOneMutably(update, state) {\n        return updateManyMutably([update], state);\n    }\n    function takeUpdatedModel(models, update, state) {\n        if (!(update.id in state.entities)) {\n            return false;\n        }\n        const original = state.entities[update.id];\n        const updated = Object.assign({}, original, update.changes);\n        const newKey = selectIdValue(updated, selectId);\n        delete state.entities[update.id];\n        models.push(updated);\n        return newKey !== update.id;\n    }\n    function updateManyMutably(updates, state) {\n        const models = [];\n        const didMutateIds = updates.filter((update) => takeUpdatedModel(models, update, state))\n            .length > 0;\n        if (models.length === 0) {\n            return DidMutate.None;\n        }\n        else {\n            const originalIds = state.ids;\n            const updatedIndexes = [];\n            state.ids = state.ids.filter((id, index) => {\n                if (id in state.entities) {\n                    return true;\n                }\n                else {\n                    updatedIndexes.push(index);\n                    return false;\n                }\n            });\n            merge(models, state);\n            if (!didMutateIds &&\n                updatedIndexes.every((i) => state.ids[i] === originalIds[i])) {\n                return DidMutate.EntitiesOnly;\n            }\n            else {\n                return DidMutate.Both;\n            }\n        }\n    }\n    function mapMutably(updatesOrMap, state) {\n        const updates = state.ids.reduce((changes, id) => {\n            const change = updatesOrMap(state.entities[id]);\n            if (change !== state.entities[id]) {\n                changes.push({ id, changes: change });\n            }\n            return changes;\n        }, []);\n        return updateManyMutably(updates, state);\n    }\n    function mapOneMutably({ map, id }, state) {\n        const entity = state.entities[id];\n        if (!entity) {\n            return DidMutate.None;\n        }\n        const updatedEntity = map(entity);\n        return updateOneMutably({\n            id: id,\n            changes: updatedEntity,\n        }, state);\n    }\n    function upsertOneMutably(entity, state) {\n        return upsertManyMutably([entity], state);\n    }\n    function upsertManyMutably(entities, state) {\n        const added = [];\n        const updated = [];\n        for (const entity of entities) {\n            const id = selectIdValue(entity, selectId);\n            if (id in state.entities) {\n                updated.push({ id, changes: entity });\n            }\n            else {\n                added.push(entity);\n            }\n        }\n        const didMutateByUpdated = updateManyMutably(updated, state);\n        const didMutateByAdded = addManyMutably(added, state);\n        switch (true) {\n            case didMutateByAdded === DidMutate.None &&\n                didMutateByUpdated === DidMutate.None:\n                return DidMutate.None;\n            case didMutateByAdded === DidMutate.Both ||\n                didMutateByUpdated === DidMutate.Both:\n                return DidMutate.Both;\n            default:\n                return DidMutate.EntitiesOnly;\n        }\n    }\n    function merge(models, state) {\n        models.sort(sort);\n        const ids = [];\n        let i = 0;\n        let j = 0;\n        while (i < models.length && j < state.ids.length) {\n            const model = models[i];\n            const modelId = selectIdValue(model, selectId);\n            const entityId = state.ids[j];\n            const entity = state.entities[entityId];\n            if (sort(model, entity) <= 0) {\n                ids.push(modelId);\n                i++;\n            }\n            else {\n                ids.push(entityId);\n                j++;\n            }\n        }\n        if (i < models.length) {\n            state.ids = ids.concat(models.slice(i).map(selectId));\n        }\n        else {\n            state.ids = ids.concat(state.ids.slice(j));\n        }\n        models.forEach((model, i) => {\n            state.entities[selectId(model)] = model;\n        });\n    }\n    return {\n        removeOne,\n        removeMany,\n        removeAll,\n        addOne: createStateOperator(addOneMutably),\n        updateOne: createStateOperator(updateOneMutably),\n        upsertOne: createStateOperator(upsertOneMutably),\n        setAll: createStateOperator(setAllMutably),\n        setOne: createStateOperator(setOneMutably),\n        setMany: createStateOperator(setManyMutably),\n        addMany: createStateOperator(addManyMutably),\n        updateMany: createStateOperator(updateManyMutably),\n        upsertMany: createStateOperator(upsertManyMutably),\n        map: createStateOperator(mapMutably),\n        mapOne: createStateOperator(mapOneMutably),\n    };\n}\n\nfunction createEntityAdapter(options = {}) {\n    const { selectId, sortComparer } = Object.assign({ sortComparer: false, selectId: (instance) => instance.id }, options);\n    const stateFactory = createInitialStateFactory();\n    const selectorsFactory = createSelectorsFactory();\n    const stateAdapter = sortComparer\n        ? createSortedStateAdapter(selectId, sortComparer)\n        : createUnsortedStateAdapter(selectId);\n    return Object.assign(Object.assign(Object.assign({ selectId,\n        sortComparer }, stateFactory), selectorsFactory), stateAdapter);\n}\n\nclass Dictionary {\n}\n\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Dictionary, createEntityAdapter };\n\n//# sourceMappingURL=ngrx-entity.js.map","import { Component } from '@angular/core'\r\nimport { select, Store } from '@ngrx/store';\r\nimport { EMPTY, Observable } from 'rxjs';\r\nimport { logout } from 'src/app/modules/auth/state/actions';\r\nimport { Animations } from 'src/app/shared/animations';\r\nimport { RootStoreState } from 'src/app/store/root-store.state';\r\nimport { ShipAction, ShipSelectors } from 'src/app/store/ship-store';\r\n\r\n@Component({\r\n  selector: 'topnav',\r\n  templateUrl: './topnav.component.html',\r\n  styleUrls: ['./topnav.component.sass'],\r\n  animations   : Animations\r\n})\r\nexport class TopnavComponent {\r\n  status: boolean = false\r\n  id$: Observable<string | undefined> = EMPTY\r\n  name$: Observable<string | undefined> = EMPTY\r\n\r\n  sidebarHandler() {\r\n    this.status = !this.status\r\n  }\r\n\r\n  constructor(private store: Store<RootStoreState>) {\r\n    this.id$ = this.store.pipe(select(ShipSelectors.selectShipId))\r\n    this.name$ = this.store.pipe(select(ShipSelectors.selectShipName))\r\n  }\r\n\r\n  auswahl() {\r\n    this.resetStore()\r\n    this.status = !this.status\r\n  }\r\n  boot() {\r\n    this.status = !this.status\r\n  }\r\n  resetStore() {\r\n    this.store.dispatch(ShipAction.resetStore())\r\n    // this.store.dispatch(PositionActions.resetStore())\r\n  }\r\n\r\n  logout() {\r\n    this.resetStore()\r\n    this.store.dispatch(logout())\r\n  }\r\n\r\n}\r\n","<div class=\"absolute w-full p-5 flex justify-between items-center bg-gray-200 bg-opacity-75 shadow-lg z-40\">\r\n  <div aria-label=\"toggler\" class=\"flex justify-center items-center\">\r\n    <button id=\"open\" [ngClass]=\"'text-gray-800 ' + (status ? 'hidden' : 'block')\" aria-label=\"open\" (click)=\"sidebarHandler()\" class=\"w-8 h-8 focus:outline-none \">\r\n      <icons class=\"w-8 h-8 stroke-1 stroke-current\" name=\"menu\"></icons>\r\n    </button>\r\n    <button *ngIf=\"status === true\" aria-label=\"close\" (click)=\"status = !status\" class=\"w-8 h-8 focus:outline-none \">\r\n      <icons class=\"w-8 h-8 stroke-1 stroke-current\" name=\"menu-off\"></icons>\r\n    </button>\r\n  </div>\r\n  <div>\r\n    <h2 class=\"text-base\">{{ name$ | async }}</h2>\r\n  </div>\r\n  <div class=\"flex justify-between items-center space-x-3\">\r\n    <icons class=\"h-8\" name=\"bordbuch-boot\"></icons>\r\n  </div>\r\n</div>\r\n<div class=\"sidebar z-50\" *ngIf=\"status\" @slideInLeft @slideOutLeft>\r\n  <div class=\"mt-5 flex flex-col justify-start items-center  px-4 w-full space-y-3 pb-5 \">\r\n    <button class=\"w-8 h-8 block focus:outline-none\" (click)=\"sidebarHandler()\">\r\n      <icons class=\"w-8 h-8 stroke-1 stroke-current\" name=\"menu-off\"></icons>\r\n    </button>\r\n    <button class=\"btn\" [routerLink]=\"['/']\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\" (click)=\"auswahl()\">\r\n      <icons class=\"w-8 h-8 stroke-1 stroke-current\" name=\"refresh\"></icons>\r\n      <p class=\"text-base leading-4\">Bordbuch-Auswahl</p>\r\n    </button>\r\n    <button class=\"btn\" *ngIf=\"id$ | async\" [routerLink]=\"['/boot', (id$ | async)]\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\" (click)=\"boot()\">\r\n      <icons class=\"w-8 h-8 stroke-1 stroke-current\" name=\"ship\"></icons>\r\n      <p class=\"text-base leading-4\">Streife</p>\r\n    </button>\r\n    <button class=\"btn\" *ngIf=\"id$ | async\" [routerLink]=\"['/boot', (id$ | async), 'map']\" routerLinkActive=\"active-link\" (click)=\"boot()\">\r\n      <icons class=\"w-8 h-8 stroke-1 stroke-current\" name=\"map\"></icons>\r\n      <p class=\"text-base leading-4\">Karte</p>\r\n    </button>\r\n    <button class=\"btn\" *ngIf=\"id$ | async\" [routerLink]=\"['/boot', (id$ | async), 'positions']\" routerLinkActive=\"active-link\" (click)=\"boot()\">\r\n      <icons class=\"w-8 h-8 stroke-1 stroke-current\" name=\"location-marker\"></icons>\r\n      <p class=\"text-base leading-4\">Positionen</p>\r\n    </button>\r\n    <button class=\"btn\" *ngIf=\"id$ | async\" [routerLink]=\"['/boot', (id$ | async), 'pdfbericht']\" routerLinkActive=\"active-link\" (click)=\"boot()\">\r\n      <icons class=\"w-8 h-8 stroke-1 stroke-current\" name=\"location-marker\"></icons>\r\n      <p class=\"text-base leading-4\">Pdf</p>\r\n    </button>\r\n  </div>\r\n  <div class=\"flex flex-col justify-between items-center h-full space-y-80 w-full\">\r\n    <div class=\"space-y-3 flex pt-8 border-gray-200 border-t justify-start pb-6 px-4 pl-4 flex-col items-center w-full\">\r\n      <button class=\"btn\" (click)=\"logout()\">\r\n        <icons class=\"w-8 h-8 stroke-1 stroke-current\" name=\"logout\"></icons>\r\n        <p class=\"text-base leading-4\">Abmelden</p>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TopnavComponent } from './topnav.component';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TopnavComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    SharedModule\r\n  ],\r\n  exports: [\r\n    TopnavComponent\r\n  ]\r\n})\r\nexport class TopnavModule { }\r\n","import { Component } from '@angular/core'\r\n\r\n@Component({\r\n  selector: 'app-mobile',\r\n  templateUrl: './mobile.component.html',\r\n  styleUrls: ['./mobile.component.sass']\r\n})\r\nexport class MobileComponent {\r\n  constructor() { }\r\n}","<topnav></topnav>\r\n<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core'\r\nimport { MobileComponent } from './mobile.component'\r\nimport { SharedModule } from 'src/app/shared/shared.module'\r\nimport { TopnavModule } from 'src/app/core/navbar/topnav/topnav.module'\r\nimport { RouterModule, Routes } from '@angular/router'\r\nimport { Resolver } from 'src/app/store/resolver'\r\nimport { KatModule } from 'src/app/store/kat-store/kat.module'\r\nimport { KatFacade } from 'src/app/store/kat-store/kat.facade'\r\n\r\nexport const routes: Routes = [\r\n  { path: '', component: MobileComponent,\r\n  children: [\r\n    { path: '', loadChildren: () => import('../../components/boot-auswahl/boot-auswahl.module').then(m => m.BootAuswahlModule), resolve: { data: Resolver } },\r\n    { path: 'boot', loadChildren: () => import('../../components/boot/boot.module').then(m => m.BootModule) }\r\n  ]}\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MobileComponent\r\n  ],\r\n  imports: [\r\n    RouterModule.forChild(routes),\r\n    SharedModule,\r\n    TopnavModule,\r\n    KatModule\r\n  ],\r\n  providers: [\r\n    Resolver,\r\n    KatFacade\r\n  ]\r\n})\r\nexport class MobileModule { }\r\n","export function checkStateForEmptyArrays(value: any): any[] {\r\n    if (isArray(value)) {\r\n        return value\r\n    } else {\r\n        return []\r\n    }\r\n}\r\n\r\nexport function dateToLocalISOString(dt: Date): string {\r\n    dt.setHours(new Date().getHours()+1)\r\n    return dt.toISOString().substring(0,16)\r\n}\r\n\r\nexport function isUndefined(value: any): value is undefined {\r\n    return typeof value === 'undefined'\r\n}\r\n  \r\nexport function isNull(value: any): value is null {\r\n    return value === null\r\n}\r\n\r\nexport function isNumber(value: any): value is number {\r\n    return typeof value === 'number'\r\n}\r\n\r\nexport function isNumberFinite(value: any): value is number {\r\n    return isNumber(value) && isFinite(value)\r\n}\r\n\r\n// Not strict positive\r\nexport function isPositive(value: number): boolean {\r\n    return value >= 0\r\n}\r\n\r\nexport function isInteger(value: number): boolean {\r\n    // No rest, is an integer\r\n    return value % 1 === 0\r\n}\r\n\r\nexport function isNil(value: any): value is null | undefined {\r\n    return value === null || typeof value === 'undefined'\r\n}\r\n\r\nexport function isString(value: any): value is string {\r\n    return typeof value === 'string'\r\n}\r\n\r\nexport function isObject(value: any): boolean {\r\n    return value !== null && typeof value === 'object'\r\n}\r\n\r\nexport function isArray(value: any): boolean {\r\n    return Array.isArray(value)\r\n}\r\n\r\nexport function isFunction(value: any): boolean {\r\n    return typeof value === 'function'\r\n}\r\n\r\nexport function toDecimal(value: number, decimal: number): number {\r\n    return Math.round(value * Math.pow(10, decimal)) / Math.pow(10, decimal)\r\n}\r\n\r\nexport function testFunction(cb: any) {\r\n    console.time('duration')\r\n    for (var i = 0; i < 1000; i++) {\r\n        // this.funcToTest()\r\n        cb // callbackFunction\r\n    };\r\n    console.timeEnd('duration')\r\n}\r\n\r\n// time\r\nexport function diff() {\r\n    const n = new Date(now() - timezoneoffset())\r\n}\r\n\r\nexport function getLocalISO(val: string = ''): string {\r\n    let date: Date | string\r\n    switch(val) {\r\n    case 'lastyear':\r\n        date = new Date(lastyear() - timezoneoffset())\r\n        break\r\n\r\n    case 'year':\r\n        date = new Date(year() - timezoneoffset())\r\n        break\r\n\r\n    case 'lastmonth':\r\n        date = new Date(lastmonth() - timezoneoffset())\r\n        break\r\n\r\n    case 'month':\r\n        date = new Date(month() - timezoneoffset())\r\n        break\r\n\r\n    case 'lastweek':\r\n        date = new Date(lastweek() - timezoneoffset())\r\n        break\r\n\r\n    case 'week':\r\n        date = new Date(week() - timezoneoffset())\r\n        break\r\n\r\n    case 'yesterday':\r\n        date = new Date(yesterday() - timezoneoffset())\r\n        break\r\n\r\n    case 'today':\r\n        date = new Date(today() - timezoneoffset())\r\n        break\r\n\r\n    case 'tomorrow':\r\n        date = new Date(tomorrow() - timezoneoffset())\r\n        break\r\n\r\n    case 'now':\r\n        date = new Date(now() - timezoneoffset())\r\n        break\r\n\r\n    default:\r\n        date = new Date()\r\n    }\r\n    const result: string = date.toISOString().slice(0, -1)\r\n\r\n    return result\r\n}\r\n\r\nexport function timezoneoffset(): any {\r\n    return new Date().getTimezoneOffset() * 60000\r\n}\r\nfunction lastyear(): any {\r\n    return new Date(new Date().getFullYear()-1, 0, 1)\r\n}\r\nfunction year(): any {\r\n    return new Date(new Date().getFullYear(), 0, 1)\r\n}\r\nfunction lastmonth(): any {\r\n    return new Date(new Date().getFullYear(), new Date().getMonth()-1, 1)\r\n}\r\nfunction month(): any {\r\n    return new Date(new Date().getFullYear(), new Date().getMonth(), 1)\r\n}\r\nfunction lastweek(): any {\r\n    // Sunday - Saturday : 0 - 6\r\n    let d = new Date()\r\n    const diff = d.getDate() - d.getDay() + (d.getDay() == 0 ? -6:1) - 7\r\n    d.setDate(diff)\r\n    d.setHours(0,0,0,0)\r\n    return d\r\n}\r\nfunction week(): any {\r\n    // Sunday - Saturday : 0 - 6\r\n    let d = new Date()\r\n    const diff = d.getDate() - d.getDay() + (d.getDay() == 0 ? -6:1)\r\n    d.setDate(diff)\r\n    d.setHours(0,0,0,0)\r\n    return d\r\n}\r\nfunction yesterday(): number {\r\n    return new Date().setHours(-24,0,0,0)\r\n}\r\nfunction today(): number {\r\n    return new Date().setHours(0,0,0,0)\r\n}\r\nfunction now(): number {\r\n    return new Date().getTime()\r\n}\r\nfunction tomorrow(): number {\r\n    return new Date().setHours(24,0,0,0)\r\n}","import { Injectable } from \"@angular/core\"\r\nimport { select, Store } from \"@ngrx/store\"\r\nimport { RootStoreState } from \"../root-store.state\";\r\n\r\nimport * as KatAction from './store/actions'\r\nimport * as KatSelectors from './store/selectors'\r\nimport * as KatState from './store/reducers'\r\nimport { Observable } from \"rxjs\"\r\n\r\nimport { Ship } from \"src/app/core/model/ship.model\"\r\nimport { Kat } from \"src/app/core/model/kat.model\"\r\nimport { Dienststelle } from \"src/app/core/model/dienststelle.model\";\r\nimport { Pruefvermerk } from \"src/app/core/model/pruefvermerk.model\";\r\nimport { Status } from \"src/app/core/model/reparatur-status.model\";\r\nimport { PositionReport } from \"src/app/core/model/positionreport.model\";\r\n\r\n\r\n@Injectable()\r\nexport class KatFacade {\r\n    // public selectors\r\n    betriebsstoffe$     = this.store.pipe(select(KatSelectors.selectAllBetriebsstoffe)) as Observable<Kat[]>\r\n    dienststellen$      = this.store.pipe(select(KatSelectors.selectDienststellen)) as Observable<Dienststelle[]>\r\n    funktionen$         = this.store.pipe(select(KatSelectors.selectAllFunktionen)) as Observable<Kat[]>\r\n    lastPositions$      = this.store.pipe(select(KatSelectors.selectLastPositions)) as Observable<PositionReport[]>\r\n    kennungen$          = this.store.pipe(select(KatSelectors.selectAllKennungen)) as Observable<Kat[]>\r\n    pruefvermerkskategorien$ = this.store.pipe(select(KatSelectors.selectpruefvermerkkategorien)) as Observable<Kat[]>\r\n    pruefvermerke$      = this.store.pipe(select(KatSelectors.selectpruefvermerke)) as Observable<Pruefvermerk[]>\r\n    schiffe$            = this.store.pipe(select(KatSelectors.selectShips)) as Observable<Ship[]>\r\n    status$             = this.store.pipe(select(KatSelectors.selectAllStatus)) as Observable<Status[]>\r\n    zweck$              = this.store.pipe(select(KatSelectors.selectAllZwecke)) as Observable<Kat[]>\r\n\r\n    constructor(private store: Store<RootStoreState>) {}\r\n\r\n    // public dispatches\r\n    // betriebsstoffe\r\n    loadBetriebsstoffe() {\r\n        this.store.dispatch(KatAction.loadBetriebsstoffe())\r\n    }\r\n    // dienststellen\r\n    loadDienststellen() {\r\n        this.store.dispatch(KatAction.loadDienststellen())\r\n    }\r\n\r\n    // funktionen\r\n    loadFunktionen() {\r\n        this.store.dispatch(KatAction.loadFunktionen())\r\n    }\r\n\r\n    // kennungen\r\n    loadKennungen() {\r\n        this.store.dispatch(KatAction.loadKennungen())\r\n    }\r\n\r\n    // lastpositions\r\n    loadLastPositions() {\r\n        this.store.dispatch(KatAction.loadLastPositions())\r\n    }\r\n\r\n    // pruefvermerke\r\n    loadPruefvermerke() {\r\n        this.store.dispatch(KatAction.loadPruefvermerke())\r\n    }\r\n\r\n    // pruefvermerkkategorien\r\n    loadPruefvermerkkategorien() {\r\n        this.store.dispatch(KatAction.loadPruefvermerkKategorien())\r\n    }\r\n\r\n    // ships\r\n    loadAllShip() {\r\n        this.store.dispatch(KatAction.loadAllShip())\r\n    } \r\n\r\n    // status\r\n    loadAllStatus() {\r\n        this.store.dispatch(KatAction.loadAllStatus())\r\n    }\r\n    getIdByStatus(bezeichnung: string): Observable<string | undefined> {\r\n        return this.store.pipe(select(KatSelectors.selectIdByStatus(bezeichnung)))\r\n    }\r\n\r\n    // zaehlerstandstypen\r\n    loadZaehlerstandstypen() {\r\n        this.store.dispatch(KatAction.loadZaehlerstandstypen())\r\n    }\r\n    getIdByZaehlerstandstyp(zaehlerstandstyp: string): Observable<string | undefined> {\r\n        return this.store.pipe(select(KatSelectors.selectIdByZaehlerstandstyp(zaehlerstandstyp)))\r\n    }\r\n\r\n    // zweck\r\n    loadZwecke() {\r\n        this.store.dispatch(KatAction.loadZwecke())\r\n    }\r\n}\r\n\r\nexport { KatState }","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { Features } from \"src/app/core/model/feature\";\r\nimport { State } from '../state'\r\n\r\n\r\nexport const katState = createFeatureSelector<State>(Features.Kat)\r\n\r\n// ship\r\nexport const isKatLoaded = createSelector(\r\n    katState,\r\n    state => state.isAllDataLoaded\r\n)\r\n\r\nexport const selectShips = createSelector(\r\n    katState,\r\n    state => state.shipSelection\r\n)\r\nexport const selectShipByDienststelle = (dienststelle: string) => createSelector(\r\n    selectShips,\r\n    ship => ship!.filter(el => {\r\n        if (dienststelle == '') return el\r\n        if (el.dienststelle == dienststelle) return el\r\n        return null\r\n    })\r\n)\r\n\r\nexport const selectDienststellen = createSelector(\r\n    katState,\r\n    state => state.dienststellen\r\n)\r\n\r\n// lastpositions\r\nexport const selectLastPositions = createSelector(\r\n    katState,\r\n    state => state.lastPositions\r\n)\r\n\r\nexport const selectpruefvermerkkategorien = createSelector(\r\n    katState,\r\n    state => state.pruefvermerkKategorien\r\n)\r\nexport const selectpruefvermerke = createSelector(\r\n    katState,\r\n    state => state.pruefvermerke\r\n)\r\nexport const selectpruefvermerkeByKategorie = (kategorie: string) => createSelector(\r\n    selectpruefvermerke,\r\n    pruefvermerk => pruefvermerk!.filter(el => el.kategorie == kategorie)\r\n)\r\n\r\n// betriebsstoffe\r\nexport const selectAllBetriebsstoffe = createSelector(\r\n    katState,\r\n    state => state.betriebsstoffe\r\n)\r\n\r\n// funktionen\r\nexport const selectAllFunktionen = createSelector(\r\n    katState,\r\n    state => state.funktionen\r\n)\r\n\r\n// kennungen\r\nexport const selectAllKennungen = createSelector(\r\n    katState,\r\n    state => state.kennungen\r\n)\r\n\r\n// status\r\nexport const selectAllStatus = createSelector(\r\n    katState,\r\n    state => state.status\r\n)\r\nexport const selectIdByStatus = (bezeichnung: string) => createSelector(\r\n    selectAllStatus,\r\n    status => status?.find(el => el.bezeichnung == bezeichnung)?.id\r\n)\r\n\r\nexport const selectAllZaehlerstandstypen = createSelector(\r\n    katState,\r\n    state => state.zaehlerstandstypen\r\n)\r\nexport const selectIdByZaehlerstandstyp = (zaehlerstandstyp: string) => createSelector(\r\n    selectAllZaehlerstandstypen,\r\n    zaehlerstandstypen => zaehlerstandstypen?.find(el => el.zaehlerstandstyp == zaehlerstandstyp)?.id\r\n)\r\n\r\n// zwecke\r\nexport const selectAllZwecke = createSelector(\r\n    katState,\r\n    state => state.zwecke\r\n)","import { Injectable } from \"@angular/core\"\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\"\r\nimport { Store } from \"@ngrx/store\"\r\nimport { Observable } from \"rxjs\"\r\nimport { finalize, first, tap } from \"rxjs/operators\"\r\nimport { RootStoreState } from \"src/app/store/root-store.state\"\r\nimport { KatFacade } from \"./kat-store/kat.facade\"\r\n\r\n@Injectable()\r\nexport class Resolver implements Resolve<any> {\r\n    loading = false\r\n\r\n    constructor(private store: Store<RootStoreState>, private _katFacade: KatFacade) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\r\n        return this.store.pipe(\r\n            // select(isShipLoaded),\r\n            tap(() => {\r\n                if (!this.loading) {\r\n                    this.loading = true\r\n                    this._katFacade.loadAllShip()\r\n                    this._katFacade.loadDienststellen()\r\n\r\n                    this._katFacade.loadFunktionen()\r\n                    this._katFacade.loadKennungen()\r\n                    this._katFacade.loadLastPositions()\r\n                    this._katFacade.loadPruefvermerke()\r\n                    this._katFacade.loadPruefvermerkkategorien()\r\n                    this._katFacade.loadBetriebsstoffe()\r\n                    this._katFacade.loadAllStatus()\r\n                    this._katFacade.loadZaehlerstandstypen()\r\n                    this._katFacade.loadZwecke()\r\n                }\r\n            }),\r\n            // filter(isShipLoaded => isShipLoaded),\r\n            first(),\r\n            finalize(() => {\r\n                this.loading = false\r\n            })\r\n        )\r\n    }\r\n}","import * as ShipAction from './ship.actions'\r\nimport * as ShipResolver from './ship.resolver'\r\nimport * as ShipSelectors from './ship.selectors'\r\nimport * as ShipState from './ship.state'\r\n\r\nexport { ShipAction, ShipResolver, ShipSelectors, ShipState }","import { Update } from \"@ngrx/entity\"\r\nimport { createAction, props } from \"@ngrx/store\"\r\nimport { Besatzung } from \"src/app/core/model/besatzung.model\"\r\nimport { Betankung } from \"src/app/core/model/betankung\"\r\nimport { Checklist } from \"src/app/core/model/checklist.model\"\r\nimport { Patrol } from \"src/app/core/model/patrol.model\"\r\nimport { Peilung } from \"src/app/core/model/peilung.model\"\r\nimport { Reparatur } from \"src/app/core/model/reparatur\"\r\nimport { Ship } from \"src/app/core/model/ship.model\"\r\nimport { Tank } from \"src/app/core/model/tank.model\"\r\n\r\n\r\n// load ship\r\nexport const loadShip = createAction(\r\n\t\"[Ship Resolver] Load Ship\",\r\n\tprops<{ id_ship: string }>()\r\n)\r\n\r\nexport const shipLoaded = createAction(\r\n\t\"[Load Ship Effect] Ship Loaded\",\r\n\tprops<{ ship: Ship }>()\r\n)\r\nexport const updateShip = createAction(\r\n\t\"[Streife] Update Ship\",\r\n\tprops<{ update: Ship }>()\r\n)\r\nexport const updateShipSuccess= createAction(\r\n\t\"[Streife] Update Ship Success\",\r\n\tprops<{ update: Ship }>()\r\n)\r\n\r\n// patrol\r\nexport const loadPatrol = createAction(\r\n\t\"[Ship Resolver] Load Patrol\",\r\n\tprops<{ id_ship: string }>()\r\n)\r\nexport const patrolLoaded = createAction(\r\n\t\"[Load Patrol Effect] Patrol Loaded\",\r\n\tprops<{ patrol: Patrol }>()\r\n)\r\nexport const initializePatrol = createAction(\r\n\t\"[Streife] Initialize Patrol\",\r\n\tprops<{ initialize: Patrol }>()\r\n)\r\nexport const insertPatrol = createAction(\r\n\t\"[Streife] Insert Patrol\",\r\n\tprops<{ insert: Patrol }>()\r\n)\r\nexport const insertPatrolSuccess = createAction(\r\n\t\"[Streife] Insert Patrol Success\",\r\n\tprops<{ action: { insert: Patrol }, id: string }>()\r\n)\r\nexport const updatePatrol = createAction(\r\n\t\"[Streife] Update Patrol\",\r\n\tprops<{ update: Patrol }>()\r\n)\r\nexport const updatePatrolSuccess = createAction(\r\n\t\"[Streife] Update Patrol Success\",\r\n\tprops<{ action: { update: Patrol }}>()\r\n)\r\nexport const deletePatrol = createAction(\r\n\t\"[Streife] Delete Patrol\",\r\n\tprops<{ id: string }>()\r\n)\r\nexport const deletePatrolSuccess = createAction(\r\n\t\"[Streife] Delete Patrol Success\",\r\n\tprops<{ status: number }>()\r\n)\r\n\r\n// reparaturen\r\nexport const loadReparaturen = createAction(\r\n\t\"[Ship Resolver] Load Reparaturen\",\r\n\tprops<{ id_ship: string }>()\r\n)\r\nexport const reparaturenLoaded = createAction(\r\n\t\"[Load Ship Effect] Reparaturen Loaded\",\r\n\tprops<{ reparaturen: Reparatur[] }>()\r\n)\r\nexport const insertReparatur = createAction(\r\n\t\"[Edit Pruefvermerk Dialog] Reparatur Insert\",\r\n\tprops<{ insert: Reparatur }>()\r\n)\r\nexport const insertReparaturSuccess = createAction(\r\n\t\"[Edit Pruefvermerk Dialog] Reparatur Insert Success\",\r\n\tprops<{ action: { insert: Reparatur }, id: string }>()\r\n)\r\nexport const updateReparatur = createAction(\r\n\t\"[Edit Pruefvermerk Dialog] Reparatur Update\",\r\n\tprops<{ update: Reparatur }>()\r\n)\r\nexport const updateReparaturSuccess = createAction(\r\n\t\"[Edit Pruefvermerk Dialog] Reparatur Update Success\",\r\n\tprops<{ update: Reparatur }>()\r\n)\r\n\r\n// reparaturfoto\r\nexport const downloadReparaturFotos = createAction(\r\n\t\"[Ship Resolver] Download ReparaturFotos\",\r\n\tprops<{ id: string }>()\r\n)\r\nexport const downloadReparaturFotosSuccess = createAction(\r\n\t\"[Load Spec Effect] ReparaturFotos Download Success\",\r\n\tprops<{ fotos: any[] }>()\r\n)\r\nexport const uploadReparaturFoto = createAction(\r\n\t\"[Edit Reparatur Dialog] ReparaturFoto Upload\",\r\n\tprops<{ upload: any }>()\r\n)\r\nexport const uploadReparaturFotoSuccess = createAction(\r\n\t\"[Edit Reparatur Dialog] ReparaturFoto Upload Success\",\r\n\tprops<{ action: { upload: any }, id: string }>()\r\n)\r\nexport const deleteReparaturFoto = createAction(\r\n\t\"[Modal Reparatur Dialog] Delete ReparaturFoto\",\r\n\tprops<{ id: string }>()\r\n)\r\nexport const deleteReparaturFotoSuccess = createAction(\r\n\t\"[Modal Reparatur Dialog] Delete ReparaturFoto Success\",\r\n\tprops<{ id: string }>()\r\n)\r\n\r\n// betankung\r\nexport const loadBetankungen = createAction(\r\n\t\"[Ship Resolver] Load Betankungen\",\r\n\tprops<{ id_ship: string }>()\r\n)\r\nexport const betankungenLoaded = createAction(\r\n\t\"[Load Ship Effect] Betankungen Loaded\",\r\n\tprops<{ betankungen: Betankung[] }>()\r\n)\r\nexport const insertBetankung = createAction(\r\n\t\"[Edit Betankungen Dialog] Betankungen Insert\",\r\n\tprops<{ insert: Betankung }>()\r\n)\r\nexport const insertBetankungSuccess = createAction(\r\n\t\"[Edit Betankungen Dialog] Betankungen Insert Success\",\r\n\tprops<{ action: { insert: Betankung }, id: string }>()\r\n)\r\nexport const updateBetankung = createAction(\r\n\t\"[Edit Betankungen Dialog] Betankungen Updates\",\r\n\tprops<{ update: Update<Betankung> }>()\r\n)\r\nexport const deleteBetankung = createAction(\r\n\t\"[Edit Betankungen Dialog] Betankungen Delete\",\r\n\tprops<{ id: string }>()\r\n)\r\n\r\n// tank\r\nexport const loadTank = createAction(\r\n\t\"[Ship Resolver] Load Tank\",\r\n\tprops<{ id_ship: string }>()\r\n)\r\nexport const loadedTank = createAction(\r\n\t\"[Load Ship Effect] Loaded Tank\",\r\n\tprops<{ tanks: Tank[] }>()\r\n)\r\n\r\n// besatzung\r\nexport const insertPatrolBesatzung = createAction(\r\n\t\"[Edit Besatzung Dialog] Besatzung Insert\",\r\n\tprops<{ insert: Besatzung }>()\r\n)\r\nexport const insertPatrolBesatzungSuccess = createAction(\r\n\t\"[Edit Besatzung Dialog] Besatzung Insert Success\",\r\n\tprops<{ action: { insert: Besatzung }, id: string }>()\r\n)\r\nexport const updatePatrolBesatzung = createAction(\r\n\t\"[Edit Besatzung Dialog] Besatzung Updates\",\r\n\tprops<{update: Update<Besatzung>}>()\r\n)\r\nexport const deletePatrolBesatzung = createAction(\r\n\t\"[Edit Besatzung Dialog] Besatzung Delete\",\r\n\tprops<{ id: string }>()\r\n)\r\n\r\n// peilung\r\nexport const loadPeilung = createAction(\r\n\t\"[Ship Resolver] Load Peilung\",\r\n\tprops<{ id_ship: string }>()\r\n)\r\nexport const loadedPeilung = createAction(\r\n\t\"[Ship Resolver] Loaded Peilung\",\r\n\tprops<{ peilungen: Peilung[] }>()\r\n)\r\nexport const insertPeilung = createAction(\r\n\t\"[Edit Peilung Dialog] Insert Peilung\",\r\n\tprops<{ insert: Peilung }>()\r\n)\r\nexport const insertPeilungSuccess = createAction(\r\n\t\"[Edit Peilung Dialog] Insert Peilung Success\",\r\n\tprops<{ action: { insert: Peilung }, id: string }>()\r\n)\r\nexport const updatePeilung = createAction(\r\n\t\"[Modal Peilung] Update Peilung\",\r\n\tprops<{ peilung: Peilung }>()\r\n)\r\n\r\nexport const resetStore = createAction(\r\n\t\"[Auswahl] Store reset\"\r\n)\r\n\r\n// checklist\r\nexport const loadChecklist = createAction(\r\n\t\"[Ship Resolver] Load Checklist\",\r\n\tprops<{ id_ship: string }>()\r\n)\r\nexport const loadedChecklist = createAction(\r\n\t\"[Load Ship Effect] Loaded Checklist\",\r\n\tprops<{ checklist: Checklist }>()\r\n)\r\nexport const insertChecklist = createAction(\r\n\t\"[Load Ship Effect] Insert Checklist\",\r\n\tprops<{ insert: Checklist }>()\r\n)\r\nexport const updateChecklist = createAction(\r\n\t\"[Load Ship Effect] Update Checklist\",\r\n\tprops<{ update: Checklist }>()\r\n)\r\n","import { Injectable } from \"@angular/core\"\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\"\r\nimport { Store } from \"@ngrx/store\"\r\nimport { Observable } from \"rxjs\"\r\nimport { finalize, first, tap } from \"rxjs/operators\"\r\nimport { RootStoreState } from \"src/app/store/root-store.state\"\r\nimport { ShipAction } from \".\"\r\n\r\nimport { SpecFacade } from \"../spec-store/spec.facade\"\r\nimport { loadAllZaehlerstaende } from \"../spec-store/store/actions\"\r\n\r\n@Injectable()\r\nexport class ShipResolver implements Resolve<any> {\r\n    loading = false\r\n\r\n    constructor(private store: Store<RootStoreState>, private _specFacade: SpecFacade) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\r\n        return this.store.pipe(\r\n            // select(isShipLoaded),\r\n            tap(() => {\r\n                if (!this.loading) {\r\n                    this.loading = true\r\n                    this.store.dispatch(ShipAction.loadShip({ id_ship: route.params[route.data.param] }))\r\n                    this.store.dispatch(ShipAction.loadPatrol({ id_ship: route.params[route.data.param] }))\r\n                    this.store.dispatch(ShipAction.loadReparaturen({ id_ship: route.params[route.data.param] }))\r\n                    this.store.dispatch(ShipAction.loadBetankungen({ id_ship: route.params[route.data.param] }))\r\n                    this.store.dispatch(ShipAction.loadTank({ id_ship: route.params[route.data.param] }))\r\n                    this.store.dispatch(ShipAction.loadPeilung({ id_ship: route.params[route.data.param] }))\r\n                    this.store.dispatch(ShipAction.loadChecklist({ id_ship: route.params[route.data.param] }))\r\n                    \r\n                    this.store.dispatch(loadAllZaehlerstaende({ id: route.params[route.data.param]}))\r\n\r\n                    this._specFacade.loadPositionsByIdSchiff(route.params[route.data.param])\r\n                    this._specFacade.loadKlarmeldungByIdSchiff(route.params[route.data.param])\r\n                }\r\n            }),\r\n            // filter(isShipLoaded => isShipLoaded),\r\n            first(),\r\n            finalize(() => {\r\n                this.loading = false\r\n            })\r\n        )\r\n    }\r\n}","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { Features } from \"src/app/core/model/feature\";\r\nimport { State } from './ship.state'\r\n\r\n\r\nexport const selectShipState = createFeatureSelector<State>(Features.Ship)\r\n\r\n// ship\r\nexport const isShipLoaded = createSelector(\r\n    selectShipState,\r\n    state => state.isAllDataLoaded\r\n)\r\n\r\nexport const selectedShip = createSelector(\r\n    selectShipState,\r\n    state => state.ship\r\n)\r\nexport const selectShip = createSelector(\r\n    selectedShip,\r\n    ship => ship\r\n)\r\nexport const selectShipId = createSelector(\r\n    selectedShip,\r\n    ship => ship?.id\r\n)\r\nexport const selectShipName = createSelector(\r\n    selectedShip,\r\n    ship => ship?.name\r\n)\r\n\r\n// patrol\r\nexport const selectedPatrol = createSelector(\r\n    selectShipState,\r\n    state => state.patrol\r\n)\r\nexport const isPatrolActive = createSelector(\r\n    selectShipState,\r\n    state => !!(state.patrol?.status == 'active')\r\n)\r\nexport const isPatrolBeendet = createSelector(\r\n    selectShipState,\r\n    state => !!(state.patrol?.status == 'beendet')\r\n)\r\nexport const patrolStatus = createSelector(\r\n    selectShipState,\r\n    state => state.patrol?.status\r\n)\r\n\r\nexport const selectedPatrolBesatzung = createSelector(\r\n    selectedPatrol,\r\n    patrol => patrol?.besatzung\r\n)\r\n\r\nexport const selectPatrolId = createSelector(\r\n    selectedPatrol,\r\n    patrol => patrol?.id\r\n)\r\n\r\nexport const selectBesatzung = createSelector(\r\n    selectedPatrol,\r\n    patrol => patrol?.besatzung\r\n)\r\n\r\n// zaehlerstaende\r\nexport const selectZaehlerstaende = createSelector(\r\n    selectShipState,\r\n    state => state.zaehlerstaende\r\n)\r\n\r\n// reparaturen\r\nexport const selectReparaturen = createSelector(\r\n    selectShipState,\r\n    state => state.reparaturen\r\n)\r\n\r\n// betankungen\r\nexport const selectBetankungen = createSelector(\r\n    selectShipState,\r\n    state => state.betankungen\r\n)\r\n\r\n// tanks\r\nexport const selectTanks = createSelector(\r\n    selectShipState,\r\n    state => state.tanks\r\n)\r\nexport const selectTankById = (id: string) => createSelector(\r\n    selectTanks,\r\n    tanks => tanks?.find(el => el.id == id)\r\n)\r\n\r\n// peilung\r\nexport const selectPeilungen = createSelector(\r\n    selectShipState,\r\n    state => state.peilungen\r\n)\r\nexport const selectPeilungenById = (id: string) => createSelector(\r\n    selectPeilungen,\r\n    peilungen => peilungen?.find(el => el.id == id)\r\n)\r\n\r\n// checklist\r\nexport const selectChecklist = createSelector(\r\n    selectShipState,\r\n    state => state.checklist\r\n)\r\nexport const selectCheckedChecklistItems = createSelector(\r\n    selectChecklist,\r\n    checklist => checklist?.checklistItems?.filter((el: any) => el.checked == true)\r\n)\r\nexport const selectUncheckedChecklistItems = createSelector(\r\n    selectChecklist,\r\n    checklist => checklist?.checklistItems?.filter((el: any) => el.checked == false)\r\n)\r\n\r\n// reparaturfotos\r\nexport const selectAllReparaturFotos = createSelector(\r\n    selectShipState,\r\n    state => state.reparaturfotos\r\n)\r\nexport const selectReparaturFotosCount = createSelector(\r\n    selectAllReparaturFotos,\r\n    reparaturfotos => reparaturfotos?.length\r\n)\r\nexport const selectReparaturFotosById = (id_reparatur: string) => createSelector(\r\n    selectAllReparaturFotos,\r\n    reparaturfotos => reparaturfotos?.filter(el => el.id_reparatur == id_reparatur)\r\n)","import { createEntityAdapter, EntityAdapter, EntityState } from \"@ngrx/entity\";\r\nimport { Besatzung } from \"src/app/core/model/besatzung.model\";\r\nimport { Betankung } from \"src/app/core/model/betankung\";\r\nimport { Checklist } from \"src/app/core/model/checklist.model\";\r\nimport { Geraetebuch } from \"src/app/core/model/geraetebuch.model\";\r\nimport { Patrol } from \"src/app/core/model/patrol.model\";\r\nimport { Peilung } from \"src/app/core/model/peilung.model\";\r\nimport { Reparatur } from \"src/app/core/model/reparatur\";\r\nimport { Ship } from \"src/app/core/model/ship.model\";\r\nimport { Tank } from \"src/app/core/model/tank.model\";\r\nimport { Zaehlerstand } from \"src/app/core/model/zaehlerstand\";\r\n\r\nexport interface State { //extends EntityState<any>\r\n    ship: Ship | undefined\r\n    patrol?: Patrol\r\n    zaehlerstaende?: Zaehlerstand[]\r\n    reparaturen?: Reparatur[]\r\n    reparaturfotos?: any[]\r\n    betankungen?: Betankung[]\r\n    checklist?: Checklist\r\n    geraetebuch?: Geraetebuch\r\n    tanks?: Tank[]\r\n    peilungen?: Peilung[]\r\n    isAllDataLoaded: boolean\r\n}\r\n\r\n// entitystate test\r\nexport interface BesatzungState extends EntityState<Besatzung> {\r\n    selectedId: string | null;\r\n}\r\nexport const adapter: EntityAdapter<Besatzung> = createEntityAdapter<Besatzung>()\r\n","import { Injectable } from \"@angular/core\";\r\nimport { select, Store } from \"@ngrx/store\";\r\nimport { RootStoreState } from \"../root-store.state\";\r\n\r\nimport * as SpecActions from './store/actions'\r\nimport * as SpecSelectors from './store/selectors'\r\nimport * as SpecState from './store/reducers'\r\nimport { Observable } from \"rxjs\";\r\nimport { Zaehlerstand } from \"src/app/core/model/zaehlerstand\";\r\nimport { Klarmeldung } from \"src/app/core/model/klarmeldung.model\";\r\nimport { PositionReport } from \"src/app/core/model/positionreport.model\";\r\n\r\n\r\n@Injectable()\r\nexport class SpecFacade {\r\n    // public selectors\r\n    klarmeldung$  = this.store.pipe(select(SpecSelectors.selectKlarmeldung)) as Observable<Klarmeldung>\r\n    positions$      = this.store.pipe(select(SpecSelectors.selectPositions)) as Observable<PositionReport[]>\r\n    saving$         = this.store.pipe(select(SpecSelectors.selectSaving)) as Observable<boolean>\r\n    allZaehlerstaende$  = this.store.pipe(select(SpecSelectors.selectAllZaehlerstaende)) as Observable<Zaehlerstand[]>\r\n\r\n    constructor(private store: Store<RootStoreState>) {}\r\n\r\n    // public dispatches\r\n\r\n    // klarmeldung\r\n    loadKlarmeldungByIdSchiff(id: string) {\r\n        this.store.dispatch(SpecActions.loadKlarmeldungByIdSchiff({ id }))\r\n    }\r\n    insertKlarmeldung(insert: Klarmeldung) {\r\n        this.store.dispatch(SpecActions.insertKlarmeldung({ insert }))\r\n    }\r\n    updateKlarmeldung(update: Klarmeldung) {\r\n        this.store.dispatch(SpecActions.updateKlarmeldung({ update }))\r\n    }\r\n\r\n    // position\r\n    loadPositionsByIdSchiff(id: string) {\r\n        this.store.dispatch(SpecActions.loadPositions({ id }))\r\n    }\r\n    insertPosition(insert: PositionReport) {\r\n        this.store.dispatch(SpecActions.insertPosition({ insert }))\r\n    }\r\n    updatePosition(update: PositionReport) {\r\n        this.store.dispatch(SpecActions.updatePosition({ update }))\r\n    }\r\n    deletePosition(id: string) {\r\n        this.store.dispatch(SpecActions.deletePosition({ id }))\r\n    }\r\n    getPositionenByIdPatrol(id_patrol: string): Observable<any> {\r\n        return this.store.pipe(select(SpecSelectors.selectPositionsByPatrol(id_patrol)))\r\n    }\r\n\r\n\r\n    // saving\r\n    updateSaving(update: boolean) {\r\n        this.store.dispatch(SpecActions.updateSaving({ update }))\r\n    }\r\n\r\n    // zaehlerstaende\r\n    loadAllZaehlerstaende(id: string) {\r\n        this.store.dispatch(SpecActions.loadAllZaehlerstaende({ id }))\r\n    }\r\n    updateZaehlerstand(update: Zaehlerstand) {\r\n        this.store.dispatch(SpecActions.updateZaehlerstand({ update }))\r\n    }\r\n    getZaehlerstaendeById(id: string): Observable<any> {\r\n        return this.store.pipe(select(SpecSelectors.selectZaehlerstaendeById(id)))\r\n    }\r\n}\r\n\r\nexport { SpecState }","import { createAction, props } from \"@ngrx/store\"\r\nimport { Klarmeldung } from \"src/app/core/model/klarmeldung.model\"\r\nimport { PositionReport } from \"src/app/core/model/positionreport.model\"\r\nimport { Zaehlerstand } from \"src/app/core/model/zaehlerstand\"\r\n\r\n// position\r\nexport const loadPositions = createAction(\r\n\t\"[Spec Facade] Load Positions\",\r\n\tprops<{ id: string }>()\r\n)\r\nexport const loadPositionsSuccess = createAction(\r\n\t\"[Load Spec Effect] Load Positions Success\",\r\n\tprops<{ positionReport: PositionReport[] }>()\r\n)\r\nexport const insertPosition = createAction(\r\n\t\"[Spec Facade] insert Position\",\r\n\tprops<{ insert: PositionReport }>()\r\n)\r\nexport const insertPositionSuccess = createAction(\r\n\t\"[Position Component] insert PositionReport Success\",\r\n\tprops<{ action: { insert: PositionReport }, id: string }>()\r\n)\r\nexport const updatePosition = createAction(\r\n\t\"[Spec Facade] update Position\",\r\n\tprops<{ update: PositionReport }>()\r\n)\r\nexport const updatePositionSuccess = createAction(\r\n\t\"[Load Spec Effect] Update Position Success\",\r\n\tprops<{ update: PositionReport }>()\r\n)\r\nexport const deletePosition = createAction(\r\n\t\"[Spec Facade] delete Position\",\r\n\tprops<{ id: string }>()\r\n)\r\nexport const deletePositionSuccess = createAction(\r\n\t\"[Load Spec Effect] delete Position Success\",\r\n\tprops<{ id: string }>()\r\n)\r\n\r\n// Klarmeldung\r\nexport const loadKlarmeldungByIdSchiff = createAction(\r\n\t\"[Spec Facade] Load Klarmeldung\",\r\n\tprops<{ id: string }>()\r\n)\r\nexport const loadKlarmeldungByIdSchiffSuccess = createAction(\r\n\t\"[Load Spec Effect] Load Klarmeldung Success\",\r\n\tprops<{ klarmeldung: Klarmeldung }>()\r\n)\r\nexport const insertKlarmeldung = createAction(\r\n\t\"[Spec Facade] Insert Klarmeldung\",\r\n\tprops<{ insert: Klarmeldung }>()\r\n)\r\nexport const insertKlarmeldungSuccess = createAction(\r\n\t\"[Spec Effect] Insert Klarmeldung Success\",\r\n\tprops<{ action: { insert: Klarmeldung }, id: string }>()\r\n)\r\nexport const updateKlarmeldung = createAction(\r\n\t\"[Spec Facade] Update Klarmeldung\",\r\n\tprops<{ update: Klarmeldung }>()\r\n)\r\nexport const updateKlarmeldungSuccess = createAction(\r\n\t\"[Spec Effect] Update Klarmeldung Success\",\r\n\tprops<{ update: Klarmeldung }>()\r\n)\r\n\r\n// saving\r\nexport const updateSaving = createAction(\r\n\t\"[Streife] Update Saving\",\r\n\tprops<{ update: boolean }>()\r\n)\r\n\r\n\r\n// zaehlerstaende\r\nexport const loadAllZaehlerstaende = createAction(\r\n\t\"[Kat Resolver] Load Zaehlerstaende\",\r\n\tprops<{ id: string }>()\r\n)\r\nexport const loadedAllZaehlerstaende = createAction(\r\n\t\"[Load Spec Effect] Loaded Zaehlerstaende\",\r\n\tprops<{ zaehlerstaende: Zaehlerstand[] }>()\r\n)\r\nexport const updateZaehlerstand = createAction(\r\n\t\"[Modal Zaehlerstand] Update Zaehlerstand\",\r\n\tprops<{ update: Zaehlerstand }>()\r\n)\r\nexport const updateZaehlerstandSuccess = createAction(\r\n\t\"[Modal Zaehlerstand] Update Zaehlerstand Success\",\r\n\tprops<{ action: { update: Zaehlerstand }, id: string }>()\r\n)\r\n","import { createReducer, on } from \"@ngrx/store\"\r\nimport { Klarmeldung } from \"src/app/core/model/klarmeldung.model\"\r\nimport { PositionReport } from \"src/app/core/model/positionreport.model\"\r\nimport { Zaehlerstand } from \"src/app/core/model/zaehlerstand\"\r\nimport { checkStateForEmptyArrays } from \"src/app/shared/utils\"\r\nimport { deletePositionSuccess, insertKlarmeldungSuccess, insertPositionSuccess, loadedAllZaehlerstaende, loadKlarmeldungByIdSchiffSuccess, loadPositionsSuccess, updateKlarmeldungSuccess, updatePositionSuccess, updateSaving, updateZaehlerstandSuccess } from \"./actions\"\r\n\r\nexport interface State {\r\n    klarmeldung     : Klarmeldung       | undefined\r\n    positions       : PositionReport[]  | undefined  \r\n    saving          : boolean\r\n    zaehlerstaende  : Zaehlerstand[]    | undefined\r\n    isAllDataLoaded : boolean\r\n}\r\n\r\nexport const initialDataState: State = {\r\n    klarmeldung     : undefined,\r\n    positions       : undefined,\r\n    saving          : false,\r\n    zaehlerstaende  : undefined,\r\n    isAllDataLoaded : false\r\n}\r\n\r\nexport const reducer = createReducer(\r\n    initialDataState,\r\n\r\n    // Klarmeldung\r\n    on(loadKlarmeldungByIdSchiffSuccess, (state, action) => {\r\n        return {\r\n            ...state,\r\n            klarmeldung: action.klarmeldung\r\n        }\r\n    }),\r\n    on(insertKlarmeldungSuccess, (state, action) => {\r\n        const insert: Klarmeldung = Object.assign({}, action.action.insert, {id: action.id})\r\n        return {\r\n            ...state,\r\n            klarmeldung: insert\r\n        }\r\n    }),\r\n    on(updateKlarmeldungSuccess, (state, action) => {\r\n        return {\r\n            ...state,\r\n            klarmeldung: action.update\r\n        }\r\n    }),\r\n\r\n    // position\r\n    on(loadPositionsSuccess, (state, action) => {\r\n        return {\r\n            ...state,\r\n            positions: action.positionReport\r\n        }\r\n    }),\r\n    on(insertPositionSuccess, (state, action) => {\r\n        const insert: PositionReport = Object.assign({}, action.action.insert, {id: action.id})\r\n        let cleared: PositionReport[] | undefined = checkStateForEmptyArrays(state.positions)\r\n        cleared = [...cleared!, ...[insert]]\r\n        return {\r\n            ...state,\r\n            positions: cleared\r\n        }\r\n    }),\r\n    on(updatePositionSuccess, (state, action) => {\r\n        let cleared: PositionReport[] | undefined = checkStateForEmptyArrays(state.positions)\r\n        cleared = cleared?.filter(el => el.id != action.update.id)\r\n        cleared = [...cleared!, ...[action.update]]\r\n        return {\r\n            ...state,\r\n            positions: cleared\r\n        }\r\n    }),\r\n    on(deletePositionSuccess, (state, action) => {\r\n        let cleared: PositionReport[] | undefined = checkStateForEmptyArrays(state.positions)\r\n        cleared = cleared?.filter(el => el.id != action.id)\r\n        cleared = [...cleared!]\r\n        return {\r\n            ...state,\r\n            positions: cleared\r\n        }\r\n    }),\r\n\r\n    // saving\r\n    \r\n    on(updateSaving, (state, action) => {\r\n        return {\r\n            ...state,\r\n            saving: action.update\r\n        }\r\n    }),\r\n    // zaehlerstaende\r\n    on(loadedAllZaehlerstaende, (state, action) => {\r\n        return {\r\n            ...state,\r\n            zaehlerstaende: action.zaehlerstaende\r\n        }\r\n    }),\r\n    on(updateZaehlerstandSuccess, (state, action) => {\r\n        let clearedZaehlerstaende: Zaehlerstand[] | undefined = checkStateForEmptyArrays(state.zaehlerstaende)\r\n        clearedZaehlerstaende = clearedZaehlerstaende?.filter(el => el.id != action.action.update.id)\r\n        clearedZaehlerstaende = [...clearedZaehlerstaende!, ...[action.action.update]]\r\n        return {\r\n            ...state,\r\n            zaehlerstaende: clearedZaehlerstaende\r\n        }\r\n    })\r\n)\r\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { Features } from \"src/app/core/model/feature\";\r\nimport { State } from \"./reducers\";\r\n\r\nexport const specState = createFeatureSelector<State>(Features.Spec)\r\n\r\n// ship\r\nexport const isSpecLoaded = createSelector(\r\n    specState,\r\n    state => state.isAllDataLoaded\r\n)\r\n\r\n// Klarmeldung\r\nexport const selectKlarmeldung = createSelector(\r\n    specState,\r\n    state => state.klarmeldung\r\n)\r\n\r\n// position\r\nexport const selectPositions = createSelector(\r\n    specState,\r\n    state => state.positions\r\n)\r\nexport const selectPositionsByPatrol = (id_streife: string) => createSelector(\r\n    selectPositions,\r\n    positions => positions?.filter(el => el.id_streife == id_streife)\r\n)\r\nexport const selectPositionById = (id: any) => createSelector(\r\n    selectPositions,\r\n    position => position?.find(el => el.id == id)\r\n)\r\n\r\n// saving\r\nexport const selectSaving = createSelector(\r\n    specState,\r\n    state => state.saving\r\n)\r\n\r\n// zaehlerstaende\r\nexport const selectAllZaehlerstaende = createSelector(\r\n    specState,\r\n    state => state.zaehlerstaende\r\n)\r\nexport const selectZaehlerstaendeById = (id: string) => createSelector(\r\n    selectAllZaehlerstaende,\r\n    zaehlerstaende => zaehlerstaende?.filter(el => el.id_ship == id)\r\n)\r\n\r\n// export const selectDurchsichtByNameZaehlerstandstyp = (name: string, zaehlerstandstyp: string) => createSelector(\r\n//     selectAllZaehlerstaende,\r\n//     zaehlerstaende => zaehlerstaende?.find(el => el.name == name && el.zaehlerstandstyp == zaehlerstandstyp)?.betriebsstunden\r\n// )"],"sourceRoot":"webpack:///"}
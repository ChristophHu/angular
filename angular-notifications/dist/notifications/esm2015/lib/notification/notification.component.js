import { Component, Input } from '@angular/core';
import { NotificationType } from '../model/notification-type.enum';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class NotificationComponent {
    constructor() {
        this.title = 'Title';
        this.type = NotificationType.Success;
    }
    ngOnInit() {
        var Notification = document.getElementById("notification");
        Notification.style.transform = "translateX(150%)";
        Notification.classList.remove("hidden");
        setTimeout(function () {
            Notification.style.transform = "translateX(0%)";
        }, 200);
    }
    closeModal() {
        let Notification = document.getElementById("notification");
        Notification.style.transform = "translateX(150%)";
    }
}
NotificationComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: NotificationComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
NotificationComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: NotificationComponent, selector: "notification", inputs: { title: "title", type: "type" }, ngImport: i0, template: "<div role=\"alert\" class=\"sm:mr-6 mt-16 sm:mt-6 mb-6 sm:mb-0 xl:w-5/12 mx-auto absolute left-0 sm:left-auto right-0 sm:top-0 sm:w-6/12 md:w-3/5 justify-between w-11/12 bg-white dark:bg-gray-800 shadow-lg rounded flex sm:flex-row flex-col transition duration-150 ease-in-out\" id=\"notification\">\n    <div class=\"sm:px-6 p-2 flex mt-4 sm:mt-0 ml-4 sm:ml-0 items-center justify-center sm:rounded-tl sm:rounded-bl w-12 h-12 sm:h-auto sm:w-auto text-white\" [ngClass]=\"{'bg-red-400': (type == 'alert'), 'bg-green-400': (type == 'success')}\">\n        <button class=\"w-8 h-8 focus:outline-none\">\n          <!-- <icons class=\"w-8 h-8 stroke-1 stroke-current\" name=\"menu-off\"></icons> -->\n        </button>\n    </div>\n    <div class=\"flex flex-col justify-center xl:-ml-4 pl-4 xl:pl-1 sm:w-3/5 pt-4 sm:pb-4 pb-2\">\n        <p class=\"text-lg text-gray-800 dark:text-gray-100 font-semibold pb-1\">{{ title }}</p>\n        <p class=\"text-sm text-gray-600 dark:text-gray-400 font-normal\">You have {{ type }}successfully completed the survey. You will soon receive a reward email. Stay tuned.</p>\n    </div>\n    <div class=\"flex sm:flex-col sm:justify-center sm:border-l dark:border-gray-700 items-center border-gray-300 sm:w-1/6 pl-4 sm:pl-0\">\n        <div class=\"sm:pt-4 pb-4 sm:border-b dark:border-gray-700 border-gray-300 sm:w-full flex sm:justify-center\">\n            <span class=\"sm:text-sm text-xs text-green-400 font-bold mr-4 sm:mr-0 cursor-pointer\">View</span>\n        </div>\n        <div class=\"sm:pt-4 pb-4 flex sm:justify-center w-full cursor-pointer\" (click)=\"closeModal()\">\n            <span class=\"sm:text-sm text-xs text-gray-600 dark:text-gray-400 cursor-pointer\">Dismiss</span>\n        </div>\n    </div>\n</div>", styles: [""], directives: [{ type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: NotificationComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'notification',
                    templateUrl: './notification.component.html',
                    styleUrls: ['./notification.component.css']
                }]
        }], ctorParameters: function () { return []; }, propDecorators: { title: [{
                type: Input
            }], type: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25vdGlmaWNhdGlvbnMvc3JjL2xpYi9ub3RpZmljYXRpb24vbm90aWZpY2F0aW9uLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25vdGlmaWNhdGlvbnMvc3JjL2xpYi9ub3RpZmljYXRpb24vbm90aWZpY2F0aW9uLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ3pELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGlDQUFpQyxDQUFDOzs7QUFPbkUsTUFBTSxPQUFPLHFCQUFxQjtJQUloQztRQUhTLFVBQUssR0FBVyxPQUFPLENBQUE7UUFDdkIsU0FBSSxHQUFxQixnQkFBZ0IsQ0FBQyxPQUFPLENBQUE7SUFFMUMsQ0FBQztJQUVqQixRQUFRO1FBQ04sSUFBSSxZQUFZLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUMzRCxZQUFhLENBQUMsS0FBSyxDQUFDLFNBQVMsR0FBRyxrQkFBa0IsQ0FBQztRQUNuRCxZQUFhLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUV6QyxVQUFVLENBQUM7WUFDUCxZQUFhLENBQUMsS0FBSyxDQUFDLFNBQVMsR0FBRyxnQkFBZ0IsQ0FBQztRQUNyRCxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDVixDQUFDO0lBRU0sVUFBVTtRQUNmLElBQUksWUFBWSxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDM0QsWUFBYSxDQUFDLEtBQUssQ0FBQyxTQUFTLEdBQUcsa0JBQWtCLENBQUM7SUFDckQsQ0FBQzs7a0hBbkJVLHFCQUFxQjtzR0FBckIscUJBQXFCLDhGQ1JsQyxvdURBa0JNOzJGRFZPLHFCQUFxQjtrQkFMakMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsY0FBYztvQkFDeEIsV0FBVyxFQUFFLCtCQUErQjtvQkFDNUMsU0FBUyxFQUFFLENBQUMsOEJBQThCLENBQUM7aUJBQzVDOzBFQUVVLEtBQUs7c0JBQWIsS0FBSztnQkFDRyxJQUFJO3NCQUFaLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5vdGlmaWNhdGlvblR5cGUgfSBmcm9tICcuLi9tb2RlbC9ub3RpZmljYXRpb24tdHlwZS5lbnVtJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbm90aWZpY2F0aW9uJyxcbiAgdGVtcGxhdGVVcmw6ICcuL25vdGlmaWNhdGlvbi5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL25vdGlmaWNhdGlvbi5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgTm90aWZpY2F0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KCkgdGl0bGU6IHN0cmluZyA9ICdUaXRsZSdcbiAgQElucHV0KCkgdHlwZTogTm90aWZpY2F0aW9uVHlwZSA9IE5vdGlmaWNhdGlvblR5cGUuU3VjY2Vzc1xuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgdmFyIE5vdGlmaWNhdGlvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibm90aWZpY2F0aW9uXCIpO1xuICAgIE5vdGlmaWNhdGlvbiEuc3R5bGUudHJhbnNmb3JtID0gXCJ0cmFuc2xhdGVYKDE1MCUpXCI7XG4gICAgTm90aWZpY2F0aW9uIS5jbGFzc0xpc3QucmVtb3ZlKFwiaGlkZGVuXCIpO1xuXG4gICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIE5vdGlmaWNhdGlvbiEuc3R5bGUudHJhbnNmb3JtID0gXCJ0cmFuc2xhdGVYKDAlKVwiO1xuICAgIH0sIDIwMCk7XG4gIH1cblxuICBwdWJsaWMgY2xvc2VNb2RhbCgpIHtcbiAgICBsZXQgTm90aWZpY2F0aW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJub3RpZmljYXRpb25cIik7XG4gICAgTm90aWZpY2F0aW9uIS5zdHlsZS50cmFuc2Zvcm0gPSBcInRyYW5zbGF0ZVgoMTUwJSlcIjtcbiAgfVxufVxuIiwiPGRpdiByb2xlPVwiYWxlcnRcIiBjbGFzcz1cInNtOm1yLTYgbXQtMTYgc206bXQtNiBtYi02IHNtOm1iLTAgeGw6dy01LzEyIG14LWF1dG8gYWJzb2x1dGUgbGVmdC0wIHNtOmxlZnQtYXV0byByaWdodC0wIHNtOnRvcC0wIHNtOnctNi8xMiBtZDp3LTMvNSBqdXN0aWZ5LWJldHdlZW4gdy0xMS8xMiBiZy13aGl0ZSBkYXJrOmJnLWdyYXktODAwIHNoYWRvdy1sZyByb3VuZGVkIGZsZXggc206ZmxleC1yb3cgZmxleC1jb2wgdHJhbnNpdGlvbiBkdXJhdGlvbi0xNTAgZWFzZS1pbi1vdXRcIiBpZD1cIm5vdGlmaWNhdGlvblwiPlxuICAgIDxkaXYgY2xhc3M9XCJzbTpweC02IHAtMiBmbGV4IG10LTQgc206bXQtMCBtbC00IHNtOm1sLTAgaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHNtOnJvdW5kZWQtdGwgc206cm91bmRlZC1ibCB3LTEyIGgtMTIgc206aC1hdXRvIHNtOnctYXV0byB0ZXh0LXdoaXRlXCIgW25nQ2xhc3NdPVwieydiZy1yZWQtNDAwJzogKHR5cGUgPT0gJ2FsZXJ0JyksICdiZy1ncmVlbi00MDAnOiAodHlwZSA9PSAnc3VjY2VzcycpfVwiPlxuICAgICAgICA8YnV0dG9uIGNsYXNzPVwidy04IGgtOCBmb2N1czpvdXRsaW5lLW5vbmVcIj5cbiAgICAgICAgICA8IS0tIDxpY29ucyBjbGFzcz1cInctOCBoLTggc3Ryb2tlLTEgc3Ryb2tlLWN1cnJlbnRcIiBuYW1lPVwibWVudS1vZmZcIj48L2ljb25zPiAtLT5cbiAgICAgICAgPC9idXR0b24+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cImZsZXggZmxleC1jb2wganVzdGlmeS1jZW50ZXIgeGw6LW1sLTQgcGwtNCB4bDpwbC0xIHNtOnctMy81IHB0LTQgc206cGItNCBwYi0yXCI+XG4gICAgICAgIDxwIGNsYXNzPVwidGV4dC1sZyB0ZXh0LWdyYXktODAwIGRhcms6dGV4dC1ncmF5LTEwMCBmb250LXNlbWlib2xkIHBiLTFcIj57eyB0aXRsZSB9fTwvcD5cbiAgICAgICAgPHAgY2xhc3M9XCJ0ZXh0LXNtIHRleHQtZ3JheS02MDAgZGFyazp0ZXh0LWdyYXktNDAwIGZvbnQtbm9ybWFsXCI+WW91IGhhdmUge3sgdHlwZSB9fXN1Y2Nlc3NmdWxseSBjb21wbGV0ZWQgdGhlIHN1cnZleS4gWW91IHdpbGwgc29vbiByZWNlaXZlIGEgcmV3YXJkIGVtYWlsLiBTdGF5IHR1bmVkLjwvcD5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiZmxleCBzbTpmbGV4LWNvbCBzbTpqdXN0aWZ5LWNlbnRlciBzbTpib3JkZXItbCBkYXJrOmJvcmRlci1ncmF5LTcwMCBpdGVtcy1jZW50ZXIgYm9yZGVyLWdyYXktMzAwIHNtOnctMS82IHBsLTQgc206cGwtMFwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwic206cHQtNCBwYi00IHNtOmJvcmRlci1iIGRhcms6Ym9yZGVyLWdyYXktNzAwIGJvcmRlci1ncmF5LTMwMCBzbTp3LWZ1bGwgZmxleCBzbTpqdXN0aWZ5LWNlbnRlclwiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJzbTp0ZXh0LXNtIHRleHQteHMgdGV4dC1ncmVlbi00MDAgZm9udC1ib2xkIG1yLTQgc206bXItMCBjdXJzb3ItcG9pbnRlclwiPlZpZXc8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwic206cHQtNCBwYi00IGZsZXggc206anVzdGlmeS1jZW50ZXIgdy1mdWxsIGN1cnNvci1wb2ludGVyXCIgKGNsaWNrKT1cImNsb3NlTW9kYWwoKVwiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJzbTp0ZXh0LXNtIHRleHQteHMgdGV4dC1ncmF5LTYwMCBkYXJrOnRleHQtZ3JheS00MDAgY3Vyc29yLXBvaW50ZXJcIj5EaXNtaXNzPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbjwvZGl2PiJdfQ==
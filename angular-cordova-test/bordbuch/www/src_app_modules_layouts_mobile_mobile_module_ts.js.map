{"version":3,"sources":["./src/app/core/navbar/topnav/topnav.component.ts","./src/app/core/navbar/topnav/topnav.component.html","./src/app/core/navbar/topnav/topnav.module.ts","./src/app/modules/layouts/mobile/mobile.component.ts","./src/app/modules/layouts/mobile/mobile.component.html","./src/app/modules/layouts/mobile/mobile.module.ts","./src/app/store/kat-store/kat.facade.ts","./src/app/store/kat-store/store/selectors.ts","./src/app/store/lastposition-store/actions.ts","./src/app/store/lastposition-store/adapter.ts","./src/app/store/lastposition-store/index.ts","./src/app/store/lastposition-store/resolver.ts","./src/app/store/lastposition-store/selectors.ts","./src/app/store/resolver.ts","./src/app/store/ship-store/index.ts","./src/app/store/ship-store/ship.actions.ts","./src/app/store/ship-store/ship.resolver.ts","./src/app/store/ship-store/ship.selectors.ts","./src/app/store/ship-store/ship.state.ts","./src/app/store/zaehlerstand-store/actions.ts","./src/app/store/zaehlerstand-store/adapter.ts","./src/app/store/zaehlerstand-store/index.ts","./src/app/store/zaehlerstand-store/resolver.ts","./src/app/store/zaehlerstand-store/selectors.ts"],"names":[],"mappings":"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","file":"src_app_modules_layouts_mobile_mobile_module_ts.js","sourcesContent":["import { Component } from '@angular/core'\r\nimport { select, Store } from '@ngrx/store';\r\nimport { EMPTY, Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { logout } from 'src/app/modules/auth/state/actions';\r\nimport { Animations } from 'src/app/shared/animations';\r\nimport { PositionActions } from 'src/app/store/positionreport-store';\r\nimport { RootStoreState } from 'src/app/store/root-store.state';\r\nimport { ShipAction, ShipSelectors } from 'src/app/store/ship-store';\r\nimport { ZaehlerstandAction } from 'src/app/store/zaehlerstand-store';\r\n\r\n@Component({\r\n  selector: 'topnav',\r\n  templateUrl: './topnav.component.html',\r\n  styleUrls: ['./topnav.component.sass'],\r\n  animations   : Animations\r\n})\r\nexport class TopnavComponent {\r\n  status: boolean = false\r\n  id$: Observable<string | undefined> = EMPTY\r\n  name$: Observable<string | undefined> = EMPTY\r\n\r\n  sidebarHandler() {\r\n    this.status = !this.status\r\n  }\r\n\r\n  constructor(private store: Store<RootStoreState>) {\r\n    this.id$ = this.store.pipe(select(ShipSelectors.selectShipId))\r\n    this.store.pipe(select(ShipSelectors.selectShipId)).subscribe(id => console.log(id))\r\n    this.name$ = this.store.pipe(select(ShipSelectors.selectShipName))\r\n  }\r\n\r\n  auswahl() {\r\n    this.resetStore()\r\n    this.status = !this.status\r\n  }\r\n  boot() {\r\n    this.status = !this.status\r\n  }\r\n  resetStore() {\r\n    this.store.dispatch(ShipAction.resetStore())\r\n    this.store.dispatch(PositionActions.resetStore())\r\n    this.store.dispatch(ZaehlerstandAction.resetStore())\r\n  }\r\n\r\n  logout() {\r\n    this.resetStore()\r\n    this.store.dispatch(logout())\r\n  }\r\n\r\n}\r\n","<div class=\"absolute w-full p-5 flex justify-between items-center bg-gray-200 bg-opacity-50 shadow-lg z-40\">\r\n  <div aria-label=\"toggler\" class=\"flex justify-center items-center\">\r\n    <button id=\"open\" [ngClass]=\"'text-gray-800 ' + (status ? 'hidden' : 'block')\" aria-label=\"open\" (click)=\"sidebarHandler()\" class=\"w-8 h-8 focus:outline-none \">\r\n      <icons class=\"w-8 h-8 stroke-1 stroke-current\" name=\"menu\"></icons>\r\n    </button>\r\n    <button *ngIf=\"status === true\" aria-label=\"close\" (click)=\"status = !status\" class=\"w-8 h-8 focus:outline-none \">\r\n      <icons class=\"w-8 h-8 stroke-1 stroke-current\" name=\"menu-off\"></icons>\r\n    </button>\r\n  </div>\r\n  <div>\r\n    <h2 class=\"text-base\">{{ name$ | async }}</h2>\r\n  </div>\r\n  <div class=\"flex justify-between items-center space-x-3\">\r\n    <icons class=\"h-8\" name=\"bordbuch-boot\"></icons>\r\n  </div>\r\n</div>\r\n<div class=\"sidebar z-50\" *ngIf=\"status\" @slideInLeft @slideOutLeft>\r\n  <div class=\"mt-5 flex flex-col justify-start items-center  px-4 w-full space-y-3 pb-5 \">\r\n    <button class=\"w-8 h-8 block focus:outline-none\" (click)=\"sidebarHandler()\">\r\n      <icons class=\"w-8 h-8 stroke-1 stroke-current\" name=\"menu-off\"></icons>\r\n    </button>\r\n    <button class=\"btn\" [routerLink]=\"['/']\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\" (click)=\"auswahl()\">\r\n      <icons class=\"w-8 h-8 stroke-1 stroke-current\" name=\"refresh\"></icons>\r\n      <p class=\"text-base leading-4\">Bordbuch-Auswahl</p>\r\n    </button>\r\n    <button class=\"btn\" *ngIf=\"id$ | async\" [routerLink]=\"['/boot', (id$ | async)]\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\" (click)=\"boot()\">\r\n      <icons class=\"w-8 h-8 stroke-1 stroke-current\" name=\"ship\"></icons>\r\n      <p class=\"text-base leading-4\">Streife</p>\r\n    </button>\r\n    <button class=\"btn\" *ngIf=\"id$ | async\" [routerLink]=\"['/boot', (id$ | async), 'map']\" routerLinkActive=\"active-link\" (click)=\"boot()\">\r\n      <icons class=\"w-8 h-8 stroke-1 stroke-current\" name=\"map\"></icons>\r\n      <p class=\"text-base leading-4\">Map</p>\r\n    </button>\r\n    <button class=\"btn\" *ngIf=\"id$ | async\" [routerLink]=\"['/boot', (id$ | async), 'positions']\" routerLinkActive=\"active-link\" (click)=\"boot()\">\r\n      <icons class=\"w-8 h-8 stroke-1 stroke-current\" name=\"location-marker\"></icons>\r\n      <p class=\"text-base leading-4\">Positionen</p>\r\n    </button>\r\n  </div>\r\n  <div class=\"flex flex-col justify-between items-center h-full space-y-80 w-full\">\r\n    <div class=\"space-y-3 flex pt-8 border-gray-200 border-t justify-start pb-6 px-4 pl-4 flex-col items-center w-full\">\r\n      <button class=\"btn\" (click)=\"logout()\">\r\n        <icons class=\"w-8 h-8 stroke-1 stroke-current\" name=\"logout\"></icons>\r\n        <p class=\"text-base leading-4\">Logout</p>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TopnavComponent } from './topnav.component';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TopnavComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    SharedModule\r\n  ],\r\n  exports: [\r\n    TopnavComponent\r\n  ]\r\n})\r\nexport class TopnavModule { }\r\n","import { Component } from '@angular/core'\r\n\r\n@Component({\r\n  selector: 'app-mobile',\r\n  templateUrl: './mobile.component.html',\r\n  styleUrls: ['./mobile.component.sass']\r\n})\r\nexport class MobileComponent {\r\n  constructor() { }\r\n}","<topnav></topnav>\r\n<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core'\r\nimport { MobileComponent } from './mobile.component'\r\nimport { SharedModule } from 'src/app/shared/shared.module'\r\nimport { TopnavModule } from 'src/app/core/navbar/topnav/topnav.module'\r\nimport { RouterModule, Routes } from '@angular/router'\r\nimport { Resolver } from 'src/app/store/resolver'\r\nimport { KatModule } from 'src/app/store/kat-store/kat.module'\r\nimport { KatFacade } from 'src/app/store/kat-store/kat.facade'\r\n\r\nexport const routes: Routes = [\r\n  { path: '', component: MobileComponent,\r\n  children: [\r\n    { path: '', loadChildren: () => import('../../components/boot-auswahl/boot-auswahl.module').then(m => m.BootAuswahlModule), resolve: { data: Resolver } },\r\n    { path: 'boot', loadChildren: () => import('../../components/boot/boot.module').then(m => m.BootModule) }\r\n  ]}\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MobileComponent\r\n  ],\r\n  imports: [\r\n    RouterModule.forChild(routes),\r\n    SharedModule,\r\n    TopnavModule,\r\n    KatModule\r\n  ],\r\n  providers: [\r\n    Resolver,\r\n    KatFacade\r\n  ]\r\n})\r\nexport class MobileModule { }\r\n","import { Injectable } from \"@angular/core\"\r\nimport { select, Store } from \"@ngrx/store\"\r\nimport { RootStoreState } from \"../root-store.state\";\r\n\r\nimport * as KatAction from './store/actions'\r\nimport * as KatSelectors from './store/selectors'\r\nimport * as KatState from './store/reducers'\r\nimport { Observable } from \"rxjs\"\r\n\r\nimport { Ship } from \"src/app/core/model/ship.model\"\r\nimport { Kat } from \"src/app/core/model/kat.model\"\r\nimport { Dienststelle } from \"src/app/core/model/dienststelle.model\";\r\nimport { Pruefvermerk } from \"src/app/core/model/pruefvermerk.model\";\r\n\r\n\r\n@Injectable()\r\nexport class KatFacade {\r\n    // public selectors\r\n    betriebsstoffe$     = this.store.pipe(select(KatSelectors.selectAllBetriebsstoffe)) as Observable<Kat[]>\r\n    dienststellen$      = this.store.pipe(select(KatSelectors.selectDienststellen)) as Observable<Dienststelle[]>\r\n    funktionen$         = this.store.pipe(select(KatSelectors.selectAllFunktionen)) as Observable<Kat[]>\r\n    kennungen$          = this.store.pipe(select(KatSelectors.selectAllKennungen)) as Observable<Kat[]>\r\n    pruefvermerkskategorien$ = this.store.pipe(select(KatSelectors.selectpruefvermerkkategorien)) as Observable<Kat[]>\r\n    pruefvermerke$      = this.store.pipe(select(KatSelectors.selectpruefvermerke)) as Observable<Pruefvermerk[]>\r\n    schiffe$            = this.store.pipe(select(KatSelectors.selectShips)) as Observable<Ship[]>\r\n    zweck$              = this.store.pipe(select(KatSelectors.selectAllZwecke)) as Observable<Kat[]>\r\n\r\n    constructor(private store: Store<RootStoreState>) {}\r\n\r\n    // public dispatches\r\n    // betriebsstoffe\r\n    loadBetriebsstoffe() {\r\n        this.store.dispatch(KatAction.loadBetriebsstoffe())\r\n    }\r\n    // dienststellen\r\n    loadDienststellen() {\r\n        this.store.dispatch(KatAction.loadDienststellen())\r\n    }\r\n\r\n    // funktionen\r\n    loadFunktionen() {\r\n        this.store.dispatch(KatAction.loadFunktionen())\r\n    }\r\n\r\n    // kennungen\r\n    loadKennungen() {\r\n        this.store.dispatch(KatAction.loadKennungen())\r\n    }\r\n\r\n    // pruefvermerke\r\n    loadPruefvermerke() {\r\n        this.store.dispatch(KatAction.loadPruefvermerke())\r\n    }\r\n\r\n    // pruefvermerkkategorien\r\n    loadPruefvermerkkategorien() {\r\n        this.store.dispatch(KatAction.loadPruefvermerkKategorien())\r\n    }\r\n\r\n    // ships\r\n    loadAllShip() {\r\n        this.store.dispatch(KatAction.loadAllShip())\r\n    } \r\n\r\n    // status\r\n    // loadAllStatus() {\r\n    //     this.store.dispatch(KatAction.loadAllStatus())\r\n    // }\r\n\r\n    // zaehlerstandstypen\r\n    loadZaehlerstandstypen() {\r\n        this.store.dispatch(KatAction.loadZaehlerstandstypen())\r\n    }\r\n\r\n    // zweck\r\n    loadZwecke() {\r\n        this.store.dispatch(KatAction.loadZwecke())\r\n    }\r\n}\r\n\r\nexport { KatState }","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { Features } from \"src/app/core/model/feature\";\r\nimport { State } from '../state'\r\n\r\n\r\nexport const katState = createFeatureSelector<State>(Features.Kat)\r\n\r\n// ship\r\nexport const isKatLoaded = createSelector(\r\n    katState,\r\n    state => state.isAllDataLoaded\r\n)\r\n\r\nexport const selectShips = createSelector(\r\n    katState,\r\n    state => state.shipSelection\r\n)\r\nexport const selectShipByDienststelle = (dienststelle: string) => createSelector(\r\n    selectShips,\r\n    ship => ship!.filter(el => el.dienststelle == dienststelle)\r\n)\r\n\r\nexport const selectDienststellen = createSelector(\r\n    katState,\r\n    state => state.dienststellen\r\n)\r\n\r\nexport const selectpruefvermerkkategorien = createSelector(\r\n    katState,\r\n    state => state.pruefvermerkKategorien\r\n)\r\nexport const selectpruefvermerke = createSelector(\r\n    katState,\r\n    state => state.pruefvermerke\r\n)\r\nexport const selectpruefvermerkeByKategorie = (kategorie: string) => createSelector(\r\n    selectpruefvermerke,\r\n    pruefvermerk => pruefvermerk!.filter(el => el.kategorie == kategorie)\r\n)\r\n\r\n// betriebsstoffe\r\nexport const selectAllBetriebsstoffe = createSelector(\r\n    katState,\r\n    state => state.betriebsstoffe\r\n)\r\n\r\n// funktionen\r\nexport const selectAllFunktionen = createSelector(\r\n    katState,\r\n    state => state.funktionen\r\n)\r\n\r\n// kennungen\r\nexport const selectAllKennungen = createSelector(\r\n    katState,\r\n    state => state.kennungen\r\n)\r\n\r\n// status\r\nexport const selectAllStatus = createSelector(\r\n    katState,\r\n    state => state.status\r\n)\r\nexport const selectIdByStatus = (bezeichnung: string) => createSelector(\r\n    selectAllStatus,\r\n    status => status?.find(el => el.bezeichnung == bezeichnung)?.id\r\n)\r\n\r\n// zwecke\r\nexport const selectAllZwecke = createSelector(\r\n    katState,\r\n    state => state.zwecke\r\n)","import { createAction, props } from '@ngrx/store'\r\nimport { PositionReport } from 'src/app/core/model/positionreport.model'\r\n\r\n// load data\r\nexport const loadData = createAction(\r\n\t\"[Map Component] Load LastPosition\"\r\n)\r\n\r\n// store loaded data\r\nexport const dataLoaded = createAction(\r\n\t\"[Map Component] Loaded LastPosition\",\r\n\tprops<{ lastPositions: PositionReport[] }>()\r\n)","import { createEntityAdapter, EntityState } from \"@ngrx/entity\";\r\nimport { PositionReport } from \"src/app/core/model/positionreport.model\";\r\n\r\nexport interface DataState extends EntityState<PositionReport> {\r\n    isAllDataLoaded: boolean\r\n}\r\n\r\nexport const adapter = createEntityAdapter<PositionReport>({\r\n    // sortComparer: compareData,\r\n    // selectId: data => data.id    \r\n});\r\n\r\nexport const initialDataState = adapter.getInitialState({\r\n    isAllDataLoaded: false\r\n})\r\n\r\nexport const { selectAll } = adapter.getSelectors()","import * as LastPositionActions from './actions'\r\nimport * as LastPositionResolver from './resolver'\r\nimport * as LastPositionSelectors from './selectors'\r\n\r\nexport { LastPositionActions, LastPositionResolver, LastPositionSelectors }","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\nimport { select, Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs\";\r\nimport { filter, finalize, first, tap } from \"rxjs/operators\";\r\nimport { PositionActions } from \"../positionreport-store\";\r\nimport { RootStoreState } from \"../root-store.state\";\r\nimport { isDataLoaded } from \"./selectors\";\r\n\r\n@Injectable()\r\nexport class DataResolver implements Resolve<any> {\r\n    loading = false\r\n\r\n    constructor(private store: Store<RootStoreState>) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\r\n        return this.store.pipe(\r\n            select(isDataLoaded),\r\n            tap(dataLoaded => {\r\n                if (!this.loading && !dataLoaded) {\r\n                    this.loading = true\r\n                    this.store.dispatch(PositionActions.loadAllData({ id_ship: route.params[route.data.param] }))\r\n                }\r\n            }),\r\n            filter(dataLoaded => dataLoaded),\r\n            first(),\r\n            finalize(() => this.loading = false)\r\n        )\r\n    }\r\n\r\n}","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { Features } from \"src/app/core/model/feature\";\r\nimport { DataState, selectAll } from \"./adapter\";\r\n\r\nexport const selectDataState = createFeatureSelector<DataState>(Features.LastPosition)\r\n\r\nexport const isDataLoaded = createSelector(\r\n    selectDataState,\r\n    state => state.isAllDataLoaded\r\n)\r\n\r\nexport const selectAllData = createSelector(\r\n    selectDataState,\r\n    selectAll\r\n)\r\nexport const selectDataWithoutPatrol = (id_streife: string) => createSelector(\r\n    selectAllData,\r\n    data => data.filter(el => el.id_streife != id_streife)\r\n)\r\n\r\n// export const selectPicture = createSelector(\r\n//     selectAllData,\r\n//     data => data.filter(el => el.type == 'picture')\r\n// )\r\n\r\n// export const selectData = createSelector(\r\n//     selectAllData,\r\n//     data => data.filter(el => el.type == 'data')\r\n// )\r\n\r\n// export const selectDataCount = createSelector(\r\n//     selectData,\r\n//     data => data.length\r\n// )","import { Injectable } from \"@angular/core\"\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\"\r\nimport { Store } from \"@ngrx/store\"\r\nimport { Observable } from \"rxjs\"\r\nimport { finalize, first, tap } from \"rxjs/operators\"\r\nimport { RootStoreState } from \"src/app/store/root-store.state\"\r\nimport { KatFacade } from \"./kat-store/kat.facade\"\r\n\r\n@Injectable()\r\nexport class Resolver implements Resolve<any> {\r\n    loading = false\r\n\r\n    constructor(private store: Store<RootStoreState>, private _katFacade: KatFacade) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\r\n        return this.store.pipe(\r\n            // select(isShipLoaded),\r\n            tap(() => {\r\n                if (!this.loading) {\r\n                    this.loading = true\r\n                    this._katFacade.loadAllShip()\r\n                    this._katFacade.loadDienststellen()\r\n\r\n                    this._katFacade.loadFunktionen()\r\n                    this._katFacade.loadKennungen()\r\n                    this._katFacade.loadPruefvermerke()\r\n                    this._katFacade.loadPruefvermerkkategorien()\r\n                    this._katFacade.loadBetriebsstoffe()\r\n                    // this._katFacade.loadAllStatus()\r\n                    this._katFacade.loadZaehlerstandstypen()\r\n                    this._katFacade.loadZwecke()\r\n                    \r\n                }\r\n            }),\r\n            // filter(isShipLoaded => isShipLoaded),\r\n            first(),\r\n            finalize(() => {\r\n                this.loading = false\r\n            })\r\n        )\r\n    }\r\n}","import * as ShipAction from './ship.actions'\r\nimport * as ShipResolver from './ship.resolver'\r\nimport * as ShipSelectors from './ship.selectors'\r\nimport * as ShipState from './ship.state'\r\n\r\nexport { ShipAction, ShipResolver, ShipSelectors, ShipState }","import { Update } from \"@ngrx/entity\"\r\nimport { createAction, props } from \"@ngrx/store\"\r\nimport { Besatzung } from \"src/app/core/model/besatzung.model\"\r\nimport { Betankung } from \"src/app/core/model/betankung\"\r\nimport { Checklist } from \"src/app/core/model/checklist.model\"\r\nimport { Checklistitem } from \"src/app/core/model/checklistitem.model\"\r\nimport { Einsatzmittel } from \"src/app/core/model/einsatzmittel.model\"\r\nimport { Geraetebuch } from \"src/app/core/model/geraetebuch.model\"\r\nimport { Patrol } from \"src/app/core/model/patrol.model\"\r\nimport { Peilung } from \"src/app/core/model/peilung.model\"\r\nimport { Reparatur } from \"src/app/core/model/reparatur\"\r\nimport { Ship } from \"src/app/core/model/ship.model\"\r\nimport { Tank } from \"src/app/core/model/tank.model\"\r\n\r\n\r\n// load ship\r\nexport const loadShip = createAction(\r\n\t\"[Ship Resolver] Load Ship\",\r\n\tprops<{ id_ship: string }>()\r\n)\r\n\r\nexport const shipLoaded = createAction(\r\n\t\"[Load Ship Effect] Ship Loaded\",\r\n\tprops<{ ship: Ship }>()\r\n)\r\n\r\n// patrol\r\nexport const loadPatrol = createAction(\r\n\t\"[Ship Resolver] Load Patrol\",\r\n\tprops<{ id_ship: string }>()\r\n)\r\nexport const patrolLoaded = createAction(\r\n\t\"[Load Patrol Effect] Patrol Loaded\",\r\n\tprops<{ patrol: Patrol }>()\r\n)\r\nexport const initializePatrol = createAction(\r\n\t\"[Streife] Initialize Patrol\",\r\n\tprops<{ initialize: Patrol }>()\r\n)\r\nexport const insertPatrol = createAction(\r\n\t\"[Streife] Insert Patrol\",\r\n\tprops<{ insert: Patrol }>()\r\n)\r\nexport const insertPatrolSuccess = createAction(\r\n\t\"[Streife] Insert Patrol Success\",\r\n\tprops<{ action: { insert: Patrol }, id: string }>()\r\n)\r\nexport const updatePatrol = createAction(\r\n\t\"[Streife] Update Patrol\",\r\n\tprops<{ update: Patrol }>()\r\n)\r\nexport const deletePatrol = createAction(\r\n\t\"[Streife] Delete Patrol\",\r\n\tprops<{ id: string }>()\r\n)\r\nexport const deletePatrolSuccess = createAction(\r\n\t\"[Streife] Delete Patrol Success\",\r\n\tprops<{ status: number }>()\r\n)\r\n\r\n// reparaturen\r\nexport const loadReparaturen = createAction(\r\n\t\"[Ship Resolver] Load Reparaturen\",\r\n\tprops<{ id_ship: string }>()\r\n)\r\nexport const reparaturenLoaded = createAction(\r\n\t\"[Load Ship Effect] Reparaturen Loaded\",\r\n\tprops<{ reparaturen: Reparatur[] }>()\r\n)\r\nexport const insertReparatur = createAction(\r\n\t\"[Edit Pruefvermerk Dialog] Reparatur Insert\",\r\n\tprops<{ insert: Reparatur }>()\r\n)\r\nexport const insertReparaturSuccess = createAction(\r\n\t\"[Edit Pruefvermerk Dialog] Reparatur Insert Success\",\r\n\tprops<{ action: { insert: Reparatur }, id: string }>()\r\n)\r\n\r\n// reparaturfoto\r\nexport const downloadReparaturFotos = createAction(\r\n\t\"[Ship Resolver] Download ReparaturFotos\",\r\n\tprops<{ id: string }>()\r\n)\r\nexport const downloadReparaturFotosSuccess = createAction(\r\n\t\"[Load Spec Effect] ReparaturFotos Download Success\",\r\n\tprops<{ fotos: any[] }>()\r\n)\r\nexport const uploadReparaturFoto = createAction(\r\n\t\"[Edit Reparatur Dialog] ReparaturFoto Upload\",\r\n\tprops<{ upload: any }>()\r\n)\r\nexport const uploadReparaturFotoSuccess = createAction(\r\n\t\"[Edit Reparatur Dialog] ReparaturFoto Upload Success\",\r\n\tprops<{ action: { upload: any }, id: string }>()\r\n)\r\nexport const deleteReparaturFoto = createAction(\r\n\t\"[Modal Reparatur Dialog] Delete ReparaturFoto\",\r\n\tprops<{ id: string }>()\r\n)\r\nexport const deleteReparaturFotoSuccess = createAction(\r\n\t\"[Modal Reparatur Dialog] Delete ReparaturFoto Success\",\r\n\tprops<{ id: string }>()\r\n)\r\n\r\n// betankung\r\nexport const loadBetankungen = createAction(\r\n\t\"[Ship Resolver] Load Betankungen\",\r\n\tprops<{ id_ship: string }>()\r\n)\r\nexport const betankungenLoaded = createAction(\r\n\t\"[Load Ship Effect] Betankungen Loaded\",\r\n\tprops<{ betankungen: Betankung[] }>()\r\n)\r\nexport const insertBetankung = createAction(\r\n\t\"[Edit Betankungen Dialog] Betankungen Insert\",\r\n\tprops<{ insert: Betankung }>()\r\n)\r\nexport const insertBetankungSuccess = createAction(\r\n\t\"[Edit Betankungen Dialog] Betankungen Insert Success\",\r\n\tprops<{ action: { insert: Betankung }, id: string }>()\r\n)\r\nexport const updateBetankung = createAction(\r\n\t\"[Edit Betankungen Dialog] Betankungen Updates\",\r\n\tprops<{ update: Update<Betankung> }>()\r\n)\r\nexport const deleteBetankung = createAction(\r\n\t\"[Edit Betankungen Dialog] Betankungen Delete\",\r\n\tprops<{ id: string }>()\r\n)\r\n\r\n// tank\r\nexport const loadTank = createAction(\r\n\t\"[Ship Resolver] Load Tank\",\r\n\tprops<{ id_ship: string }>()\r\n)\r\nexport const loadedTank = createAction(\r\n\t\"[Load Ship Effect] Loaded Tank\",\r\n\tprops<{ tanks: Tank[] }>()\r\n)\r\n\r\n// besatzung\r\nexport const insertPatrolBesatzung = createAction(\r\n\t\"[Edit Besatzung Dialog] Besatzung Insert\",\r\n\tprops<{ insert: Besatzung }>()\r\n)\r\nexport const insertPatrolBesatzungSuccess = createAction(\r\n\t\"[Edit Besatzung Dialog] Besatzung Insert Success\",\r\n\tprops<{ action: { insert: Besatzung }, id: string }>()\r\n)\r\nexport const updatePatrolBesatzung = createAction(\r\n\t\"[Edit Besatzung Dialog] Besatzung Updates\",\r\n\tprops<{update: Update<Besatzung>}>()\r\n)\r\nexport const deletePatrolBesatzung = createAction(\r\n\t\"[Edit Besatzung Dialog] Besatzung Delete\",\r\n\tprops<{ id: string }>()\r\n)\r\n\r\n// peilung\r\nexport const loadPeilung = createAction(\r\n\t\"[Ship Resolver] Load Peilung\",\r\n\tprops<{ id_ship: string }>()\r\n)\r\nexport const loadedPeilung = createAction(\r\n\t\"[Ship Resolver] Loaded Peilung\",\r\n\tprops<{ peilungen: Peilung[] }>()\r\n)\r\nexport const insertPeilung = createAction(\r\n\t\"[Edit Peilung Dialog] Insert Peilung\",\r\n\tprops<{ insert: Peilung }>()\r\n)\r\nexport const insertPeilungSuccess = createAction(\r\n\t\"[Edit Peilung Dialog] Insert Peilung Success\",\r\n\tprops<{ action: { insert: Peilung }, id: string }>()\r\n)\r\nexport const updatePeilung = createAction(\r\n\t\"[Modal Peilung] Update Peilung\",\r\n\tprops<{ peilung: Peilung }>()\r\n)\r\n\r\nexport const resetStore = createAction(\r\n\t\"[Auswahl] Store reset\"\r\n)\r\n\r\n// checklist\r\nexport const loadChecklist = createAction(\r\n\t\"[Ship Resolver] Load Checklist\",\r\n\tprops<{ id_ship: string }>()\r\n)\r\nexport const loadedChecklist = createAction(\r\n\t\"[Load Ship Effect] Loaded Checklist\",\r\n\tprops<{ checklist: Checklist }>()\r\n)\r\nexport const insertChecklist = createAction(\r\n\t\"[Load Ship Effect] Insert Checklist\",\r\n\tprops<{ insert: Checklist }>()\r\n)\r\nexport const updateChecklist = createAction(\r\n\t\"[Load Ship Effect] Update Checklist\",\r\n\tprops<{ update: Checklist }>()\r\n)\r\n","import { Injectable } from \"@angular/core\"\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\"\r\nimport { Store } from \"@ngrx/store\"\r\nimport { Observable } from \"rxjs\"\r\nimport { finalize, first, tap } from \"rxjs/operators\"\r\nimport { RootStoreState } from \"src/app/store/root-store.state\"\r\nimport { ShipAction } from \".\"\r\nimport { LastPositionActions } from \"../lastposition-store\"\r\nimport { PositionActions } from \"../positionreport-store\"\r\n\r\nimport { ZaehlerstandAction } from \"../zaehlerstand-store\"\r\n\r\n@Injectable()\r\nexport class ShipResolver implements Resolve<any> {\r\n    loading = false\r\n\r\n    constructor(private store: Store<RootStoreState>) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\r\n        return this.store.pipe(\r\n            // select(isShipLoaded),\r\n            tap(() => {\r\n                if (!this.loading) {\r\n                    this.loading = true\r\n                    this.store.dispatch(ShipAction.loadShip({ id_ship: route.params[route.data.param] }))\r\n                    this.store.dispatch(ShipAction.loadPatrol({ id_ship: route.params[route.data.param] }))\r\n                    this.store.dispatch(ShipAction.loadReparaturen({ id_ship: route.params[route.data.param] }))\r\n                    this.store.dispatch(ShipAction.loadBetankungen({ id_ship: route.params[route.data.param] }))\r\n                    this.store.dispatch(ShipAction.loadTank({ id_ship: route.params[route.data.param] }))\r\n                    this.store.dispatch(ShipAction.loadPeilung({ id_ship: route.params[route.data.param] }))\r\n                    this.store.dispatch(ShipAction.loadChecklist({ id_ship: route.params[route.data.param] }))\r\n\r\n                    // positions\r\n                    this.store.dispatch(PositionActions.loadAllData({ id_ship: route.params[route.data.param] }))\r\n\r\n                    // data\r\n                    this.store.dispatch(ZaehlerstandAction.loadAllData({ id_ship: route.params[route.data.param] }))\r\n\r\n                    // lastPositions\r\n                    this.store.dispatch(LastPositionActions.loadData())                   \r\n                }\r\n            }),\r\n            // filter(isShipLoaded => isShipLoaded),\r\n            first(),\r\n            finalize(() => {\r\n                this.loading = false\r\n            })\r\n        )\r\n    }\r\n}","import { createAction, createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { Features } from \"src/app/core/model/feature\";\r\nimport { Zaehlerstand } from \"src/app/core/model/zaehlerstand\";\r\nimport { State } from './ship.state'\r\n\r\n\r\nexport const selectShipState = createFeatureSelector<State>(Features.Ship)\r\n\r\n// ship\r\nexport const isShipLoaded = createSelector(\r\n    selectShipState,\r\n    state => state.isAllDataLoaded\r\n)\r\n\r\nexport const selectedShip = createSelector(\r\n    selectShipState,\r\n    state => state.ship\r\n)\r\nexport const selectShip = createSelector(\r\n    selectedShip,\r\n    ship => ship\r\n)\r\nexport const selectShipId = createSelector(\r\n    selectedShip,\r\n    ship => ship?.id\r\n)\r\nexport const selectShipName = createSelector(\r\n    selectedShip,\r\n    ship => ship?.name\r\n)\r\n\r\n// patrol\r\nexport const isPatrolActive = createSelector(\r\n    selectShipState,\r\n    state => !!(state.patrol?.status == 'active')\r\n)\r\nexport const isPatrolBeendet = createSelector(\r\n    selectShipState,\r\n    state => !!(state.patrol?.status == 'beendet')\r\n)\r\nexport const patrolStatus = createSelector(\r\n    selectShipState,\r\n    state => state.patrol?.status\r\n)\r\n\r\nexport const selectedPatrol = createSelector(\r\n    selectShipState,\r\n    state => state.patrol\r\n)\r\n\r\nexport const selectedPatrolBesatzung = createSelector(\r\n    selectedPatrol,\r\n    patrol => patrol?.besatzung\r\n)\r\n\r\nexport const selectPatrolId = createSelector(\r\n    selectedPatrol,\r\n    patrol => patrol?.id\r\n)\r\n\r\nexport const selectBesatzung = createSelector(\r\n    selectedPatrol,\r\n    patrol => patrol?.besatzung\r\n)\r\n\r\n// zaehlerstaende\r\nexport const selectZaehlerstaende = createSelector(\r\n    selectShipState,\r\n    state => state.zaehlerstaende\r\n)\r\n\r\n// reparaturen\r\nexport const selectReparaturen = createSelector(\r\n    selectShipState,\r\n    state => state.reparaturen\r\n)\r\n\r\n// betankungen\r\nexport const selectBetankungen = createSelector(\r\n    selectShipState,\r\n    state => state.betankungen\r\n)\r\n\r\n// tanks\r\nexport const selectTanks = createSelector(\r\n    selectShipState,\r\n    state => state.tanks\r\n)\r\nexport const selectTankById = (id: string) => createSelector(\r\n    selectTanks,\r\n    tanks => tanks?.find(el => el.id == id)\r\n)\r\n\r\n// peilung\r\nexport const selectPeilungen = createSelector(\r\n    selectShipState,\r\n    state => state.peilungen\r\n)\r\nexport const selectPeilungenById = (id: string) => createSelector(\r\n    selectPeilungen,\r\n    peilungen => peilungen?.find(el => el.id == id)\r\n)\r\n\r\n// checklist\r\nexport const selectChecklist = createSelector(\r\n    selectShipState,\r\n    state => state.checklist\r\n)\r\nexport const selectCheckedChecklistItems = createSelector(\r\n    selectChecklist,\r\n    checklist => checklist?.checklistItems?.filter((el: any) => el.checked == true)\r\n)\r\nexport const selectUncheckedChecklistItems = createSelector(\r\n    selectChecklist,\r\n    checklist => checklist?.checklistItems?.filter((el: any) => el.checked == false)\r\n)\r\n\r\n// reparaturfotos\r\nexport const selectAllReparaturFotos = createSelector(\r\n    selectShipState,\r\n    state => state.reparaturfotos\r\n)\r\nexport const selectReparaturFotosCount = createSelector(\r\n    selectAllReparaturFotos,\r\n    reparaturfotos => reparaturfotos?.length\r\n)","import { createEntityAdapter, EntityAdapter, EntityState } from \"@ngrx/entity\";\r\nimport { Besatzung } from \"src/app/core/model/besatzung.model\";\r\nimport { Betankung } from \"src/app/core/model/betankung\";\r\nimport { Checklist } from \"src/app/core/model/checklist.model\";\r\nimport { Geraetebuch } from \"src/app/core/model/geraetebuch.model\";\r\nimport { Patrol } from \"src/app/core/model/patrol.model\";\r\nimport { Peilung } from \"src/app/core/model/peilung.model\";\r\nimport { Reparatur } from \"src/app/core/model/reparatur\";\r\nimport { Ship } from \"src/app/core/model/ship.model\";\r\nimport { Tank } from \"src/app/core/model/tank.model\";\r\nimport { Zaehlerstand } from \"src/app/core/model/zaehlerstand\";\r\n\r\nexport interface State { //extends EntityState<any>\r\n    ship: Ship | undefined\r\n    patrol?: Patrol\r\n    zaehlerstaende?: Zaehlerstand[]\r\n    reparaturen?: Reparatur[]\r\n    reparaturfotos?: any[]\r\n    betankungen?: Betankung[]\r\n    checklist?: Checklist\r\n    geraetebuch?: Geraetebuch\r\n    tanks?: Tank[]\r\n    peilungen?: Peilung[]\r\n    isAllDataLoaded: boolean\r\n}\r\n\r\n// entitystate test\r\nexport interface BesatzungState extends EntityState<Besatzung> {\r\n    selectedId: string | null;\r\n}\r\nexport const adapter: EntityAdapter<Besatzung> = createEntityAdapter<Besatzung>()\r\n","import { Update } from '@ngrx/entity'\r\nimport { createAction, props } from '@ngrx/store'\r\nimport { Zaehlerstand } from 'src/app/core/model/zaehlerstand'\r\n\r\n// load data\r\nexport const loadAllData = createAction(\r\n\t\"[Data Resolver] Load All Zaehlerstaende\",\r\n\tprops<{ id_ship: string }>()\r\n)\r\n\r\n// store loaded data\r\nexport const allDataLoaded = createAction(\r\n\t\"[Load Data Effect] All Zaehlerstaende Loaded\",\r\n\tprops<{ zaehlerstand: Zaehlerstand[] }>()\r\n)\r\n\r\nexport const dataUpdate = createAction(\r\n\t\"[Edit Data Dialog] Zaehlerstand Updates\",\r\n\tprops<{ update: Update<Zaehlerstand> }>()\r\n)\r\n\r\nexport const resetStore = createAction(\r\n\t\"[Topnav] Store Reset\"\r\n)","import { createEntityAdapter, EntityState } from \"@ngrx/entity\";\r\nimport { Zaehlerstand } from \"src/app/core/model/zaehlerstand\";\r\n\r\nexport interface DataState extends EntityState<Zaehlerstand> {\r\n    isAllDataLoaded: boolean\r\n}\r\n\r\nexport const adapter = createEntityAdapter<Zaehlerstand>({\r\n    // sortComparer: compareData,\r\n    // selectIds: data => data.id    \r\n});\r\n\r\nexport const initialDataState = adapter.getInitialState({\r\n    isAllDataLoaded: false\r\n})\r\n\r\nexport const { selectAll } = adapter.getSelectors()","import * as ZaehlerstandAction from './actions'\r\nimport * as ZaehlerstandResolver from './resolver'\r\nimport * as ZaehlerstandSelectors from './selectors'\r\n\r\nexport { ZaehlerstandAction, ZaehlerstandResolver, ZaehlerstandSelectors }","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\nimport { select, Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs\";\r\nimport { filter, finalize, first, tap } from \"rxjs/operators\";\r\nimport { RootStoreState } from \"../root-store.state\";\r\nimport { loadAllData } from \"./actions\";\r\n\r\nimport { isDataLoaded } from \"./selectors\";\r\n\r\n@Injectable()\r\nexport class DataResolver implements Resolve<any> {\r\n    loading = false\r\n\r\n    constructor(private store: Store<RootStoreState>) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\r\n        return this.store.pipe(\r\n            select(isDataLoaded),\r\n            tap(dataLoaded => {\r\n                if (!this.loading && !dataLoaded) {\r\n                    this.loading = true\r\n                    this.store.dispatch(loadAllData({ id_ship: route.params[route.data.param] }))\r\n                }\r\n            }),\r\n            filter(dataLoaded => dataLoaded),\r\n            first(),\r\n            finalize(() => this.loading = false)\r\n        )\r\n    }\r\n}","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { Features } from \"src/app/core/model/feature\";\r\nimport { DataState, selectAll } from \"./adapter\";\r\n\r\nexport const selectDataState = createFeatureSelector<DataState>(Features.Zaehlerstand)\r\n\r\nexport const isDataLoaded = createSelector(\r\n    selectDataState,\r\n    state => state.isAllDataLoaded\r\n)\r\n\r\nexport const selectAllData = createSelector(\r\n    selectDataState,\r\n    selectAll\r\n)\r\n\r\nexport const selectDataById = (id: any) => createSelector(\r\n    selectAllData,\r\n    data => data.find(el => el.id == id)\r\n)"],"sourceRoot":"webpack:///"}